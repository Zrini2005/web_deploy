{"version":3,"file":"freeroam-arcadia-23.mjs","sources":["../node_modules/@lit/reactive-element/decorators/custom-element.js","../node_modules/@lit/reactive-element/decorators/property.js","../node_modules/@lit/reactive-element/decorators/query-assigned-elements.js","../src/config/config.ts","../node_modules/@lit-labs/react/create-component.js","../node_modules/robust-predicates/esm/util.js","../node_modules/robust-predicates/esm/orient2d.js","../node_modules/delaunator/index.js","../node_modules/d3-delaunay/src/path.js","../node_modules/d3-delaunay/src/polygon.js","../node_modules/d3-delaunay/src/voronoi.js","../node_modules/d3-delaunay/src/delaunay.js","../node_modules/prando/dist/Prando.es.js","../src/utils/polygons.ts","../src/biomes/BaseBiome.ts","../src/biomes/GroundBiome.ts","../src/biomes/FlyingBiome.ts","../src/biomes/SteelBiome.ts","../src/biomes/PsychicBiome.ts","../src/types.d.ts","../src/utils/helpers.ts","../src/biomes/OuterArea.ts","../src/objects/Lootbox.ts","../src/utils/dungeons.ts","../src/utils/perlin.ts","../src/objects/ghostPlayer.ts","../src/objects/Player.ts","../src/objects/Dungeon.ts","../src/utils/maps.ts","../node_modules/phaser3-rex-plugins/plugins/utils/input/CursorKeys.js","../node_modules/phaser3-rex-plugins/plugins/utils/math/RadToDeg.js","../node_modules/phaser3-rex-plugins/plugins/utils/math/angle/angletodirections/Const.js","../node_modules/phaser3-rex-plugins/plugins/utils/math/angle/angletodirections/AngleToDirections.js","../node_modules/phaser3-rex-plugins/plugins/utils/input/VectorToCursorKeys.js","../node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","../node_modules/phaser3-rex-plugins/plugins/utils/input/GetPointerWorldXY.js","../node_modules/phaser3-rex-plugins/plugins/input/touchcursor/TouchCursor.js","../node_modules/phaser3-rex-plugins/plugins/input/virtualjoystick/VirtualJoyStick.js","../src/objects/Arena.ts","../src/objects/Interactives.ts","../src/scenes/Procedural-FreeRoam.ts","../src/scenes/coordinatesOverlay.ts","../src/FreeRoam.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=e=>n=>\"function\"==typeof n?((e,n)=>(customElements.define(e,n),n))(e,n):((e,n)=>{const{kind:t,elements:s}=n;return{kind:t,elements:s,finisher(n){customElements.define(e,n)}}})(e,n);export{e as customElement};\n//# sourceMappingURL=custom-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst i=(i,e)=>\"method\"===e.kind&&e.descriptor&&!(\"value\"in e.descriptor)?{...e,finisher(n){n.createProperty(e.key,i)}}:{kind:\"field\",key:Symbol(),placement:\"own\",descriptor:{},originalKey:e.key,initializer(){\"function\"==typeof e.initializer&&(this[e.key]=e.initializer.call(this))},finisher(n){n.createProperty(e.key,i)}};function e(e){return(n,t)=>void 0!==t?((i,e,n)=>{e.constructor.createProperty(n,i)})(e,n,t):i(e,n)}export{e as property};\n//# sourceMappingURL=property.js.map\n","import{decorateProperty as o}from\"./base.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var n;const e=null!=(null===(n=window.HTMLSlotElement)||void 0===n?void 0:n.prototype.assignedElements)?(o,n)=>o.assignedElements(n):(o,n)=>o.assignedNodes(n).filter((o=>o.nodeType===Node.ELEMENT_NODE));function l(n){const{slot:l,selector:t}=null!=n?n:{};return o({descriptor:o=>({get(){var o;const r=\"slot\"+(l?`[name=${l}]`:\":not([name])\"),i=null===(o=this.renderRoot)||void 0===o?void 0:o.querySelector(r),s=null!=i?e(i,n):[];return t?s.filter((o=>o.matches(t))):s},enumerable:!0,configurable:!0})})}export{l as queryAssignedElements};\n//# sourceMappingURL=query-assigned-elements.js.map\n","import { Asset } from \"../types\";\r\n\r\ntype Config = {\r\n\tfps: Phaser.Types.Core.FPSConfig;\r\n\ttileWidth: number;\r\n\tplayer: {\r\n\t\tkey: string;\r\n\t\tvelocity: number;\r\n\t\tspawn: {\r\n\t\t\tx: number;\r\n\t\t\ty: number;\r\n\t\t};\r\n\t\tframeWidth: number;\r\n\t\tframeHeight: number;\r\n\t\tframeRate: number;\r\n\t};\r\n\tfreeRoam: {\r\n\t\tkey: string;\r\n\t};\r\n\tloader: {\r\n\t\tkey: string;\r\n\t};\r\n\tarena: {\r\n\t\tstartMatchImage: Asset;\r\n\t\tstartMatchImageMobile: Asset;\r\n\t};\r\n\tlootboxOpen: Asset;\r\n\tlootboxClosed: Asset;\r\n\topenLootbox: Asset;\r\n\topenDungeon: Asset;\r\n\tteleporter: {\r\n\t\tEffect: Asset;\r\n\t\tImage: Asset;\r\n\t};\r\n\tseed: number;\r\n};\r\n\r\nconst config: Config = {\r\n\tfps: {\r\n\t\tmin: 10,\r\n\t\ttarget: 75,\r\n\t\tsmoothStep: true,\r\n\t},\r\n\ttileWidth: 16,\r\n\tplayer: {\r\n\t\tkey: \"PLAYER\",\r\n\t\tvelocity: 175,\r\n\t\tspawn: {\r\n\t\t\tx: 15,\r\n\t\t\ty: 12,\r\n\t\t},\r\n\t\tframeWidth: 256,\r\n\t\tframeHeight: 256,\r\n\t\tframeRate: 16,\r\n\t},\r\n\tfreeRoam: {\r\n\t\tkey: \"FREE_ROAM\",\r\n\t},\r\n\tloader: {\r\n\t\tkey: \"LOADER\",\r\n\t},\r\n\tarena: {\r\n\t\tstartMatchImage: {\r\n\t\t\tkey: \"start-match\",\r\n\t\t\turl: \"/assets/phaser/objects/start-match.webp\",\r\n\t\t},\r\n\t\tstartMatchImageMobile: {\r\n\t\t\tkey: \"start-match-mobile\",\r\n\t\t\turl: \"/assets/phaser/objects/start-match-mobile.webp\",\r\n\t\t},\r\n\t},\r\n\tlootboxOpen: {\r\n\t\tkey: \"LOOTBOX_OPEN\",\r\n\t\turl: \"/assets/phaser/objects/lootbox-open.webp\",\r\n\t},\r\n\tlootboxClosed: {\r\n\t\tkey: \"LOOTBOX_CLOSED\",\r\n\t\turl: \"/assets/phaser/objects/lootbox-closed.webp\",\r\n\t},\r\n\topenLootbox: {\r\n\t\tkey: \"OPEN_LOOTBOX\",\r\n\t\turl: \"/assets/phaser/objects/open-lootbox.webp\",\r\n\t},\r\n\topenDungeon: {\r\n\t\tkey: \"OPEN_DUNGEON\",\r\n\t\turl: \"/assets/phaser/objects/open-dungeon.webp\"\r\n\t},\r\n\tteleporter: {\r\n\t\tEffect: {\r\n\t\t\tkey: \"EFFECTS_TILESET\",\r\n\t\t\turl: \"/assets/phaser/objects/effects.webp\",\r\n\t\t},\r\n\t\tImage: {\r\n\t\t\tkey: \"TELEPORT_IMAGE\",\r\n\t\t\turl: \"/assets/phaser/objects/teleport.webp\",\r\n\t\t},\r\n\t},\r\n\tseed: 1234\r\n};\r\n\r\nexport { config };\r\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=new Set([\"children\",\"localName\",\"ref\",\"style\",\"className\"]),e=new WeakMap,n=(t,n,s,i,o)=>{const l=null==o?void 0:o[n];void 0===l||s===i?null==s&&n in HTMLElement.prototype?t.removeAttribute(n):t[n]=s:((t,n,s)=>{let i=e.get(t);void 0===i&&e.set(t,i=new Map);let o=i.get(n);void 0!==s?void 0===o?(i.set(n,o={handleEvent:s}),t.addEventListener(n,o)):o.handleEvent=s:void 0!==o&&(i.delete(n),t.removeEventListener(n,o))})(t,l,s)};function s(e=window.React,s,i,o,l){let d,c,a;if(void 0===s){const t=e;({tagName:c,elementClass:a,events:o,displayName:l}=t),d=t.react}else d=e,a=i,c=s;const r=d.Component,h=d.createElement,u=new Set(Object.keys(null!=o?o:{}));class f extends r{constructor(){super(...arguments),this.o=null}t(t){if(null!==this.o)for(const e in this.i)n(this.o,e,this.props[e],t?t[e]:void 0,o)}componentDidMount(){this.t()}componentDidUpdate(t){this.t(t)}render(){const{_$Gl:e,...n}=this.props;this.h!==e&&(this.u=t=>{null!==e&&((t,e)=>{\"function\"==typeof t?t(e):t.current=e})(e,t),this.o=t,this.h=e}),this.i={};const s={ref:this.u};for(const[e,i]of Object.entries(n))t.has(e)?s[\"className\"===e?\"class\":e]=i:u.has(e)||e in a.prototype?this.i[e]=i:s[e]=i;return h(c,s)}}f.displayName=null!=l?l:a.name;const v=d.forwardRef(((t,e)=>h(f,{...t,_$Gl:e},null==t?void 0:t.children)));return v.displayName=f.displayName,v}export{s as createComponent};\n//# sourceMappingURL=create-component.js.map\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        // find the point closest to the seed\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                const d = this._dists[id];\n                if (d > d0) {\n                    hull[j++] = id;\n                    d0 = d;\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","var Prando = /** @class */ (function () {\n    // ================================================================================================================\n    // CONSTRUCTOR ----------------------------------------------------------------------------------------------------\n    /**\n     * Generate a new Prando pseudo-random number generator.\n     *\n     * @param seed - A number or string seed that determines which pseudo-random number sequence will be created. Defaults to a random seed based on `Math.random()`.\n     */\n    function Prando(seed) {\n        this._value = NaN;\n        if (typeof seed === \"string\") {\n            // String seed\n            this._seed = this.hashCode(seed);\n        }\n        else if (typeof seed === \"number\") {\n            // Numeric seed\n            this._seed = this.getSafeSeed(seed);\n        }\n        else {\n            // Pseudo-random seed\n            this._seed = this.getSafeSeed(Prando.MIN + Math.floor((Prando.MAX - Prando.MIN) * Math.random()));\n        }\n        this.reset();\n    }\n    // ================================================================================================================\n    // PUBLIC INTERFACE -----------------------------------------------------------------------------------------------\n    /**\n     * Generates a pseudo-random number between a lower (inclusive) and a higher (exclusive) bounds.\n     *\n     * @param min - The minimum number that can be randomly generated.\n     * @param pseudoMax - The maximum number that can be randomly generated (exclusive).\n     * @return The generated pseudo-random number.\n     */\n    Prando.prototype.next = function (min, pseudoMax) {\n        if (min === void 0) { min = 0; }\n        if (pseudoMax === void 0) { pseudoMax = 1; }\n        this.recalculate();\n        return this.map(this._value, Prando.MIN, Prando.MAX, min, pseudoMax);\n    };\n    /**\n     * Generates a pseudo-random integer number in a range (inclusive).\n     *\n     * @param min - The minimum number that can be randomly generated.\n     * @param max - The maximum number that can be randomly generated.\n     * @return The generated pseudo-random number.\n     */\n    Prando.prototype.nextInt = function (min, max) {\n        if (min === void 0) { min = 10; }\n        if (max === void 0) { max = 100; }\n        this.recalculate();\n        return Math.floor(this.map(this._value, Prando.MIN, Prando.MAX, min, max + 1));\n    };\n    /**\n     * Generates a pseudo-random string sequence of a particular length from a specific character range.\n     *\n     * Note: keep in mind that creating a random string sequence does not guarantee uniqueness; there is always a\n     * 1 in (char_length^string_length) chance of collision. For real unique string ids, always check for\n     * pre-existing ids, or employ a robust GUID/UUID generator.\n     *\n     * @param length - Length of the string to be generated.\n     * @param chars - Characters that are used when creating the random string. Defaults to all alphanumeric chars (A-Z, a-z, 0-9).\n     * @return The generated string sequence.\n     */\n    Prando.prototype.nextString = function (length, chars) {\n        if (length === void 0) { length = 16; }\n        if (chars === void 0) { chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"; }\n        var str = \"\";\n        while (str.length < length) {\n            str += this.nextChar(chars);\n        }\n        return str;\n    };\n    /**\n     * Generates a pseudo-random string of 1 character specific character range.\n     *\n     * @param chars - Characters that are used when creating the random string. Defaults to all alphanumeric chars (A-Z, a-z, 0-9).\n     * @return The generated character.\n     */\n    Prando.prototype.nextChar = function (chars) {\n        if (chars === void 0) { chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"; }\n        return chars.substr(this.nextInt(0, chars.length - 1), 1);\n    };\n    /**\n     * Picks a pseudo-random item from an array. The array is left unmodified.\n     *\n     * Note: keep in mind that while the returned item will be random enough, picking one item from the array at a time\n     * does not guarantee nor imply that a sequence of random non-repeating items will be picked. If you want to\n     * *pick items in a random order* from an array, instead of *pick one random item from an array*, it's best to\n     * apply a *shuffle* transformation to the array instead, then read it linearly.\n     *\n     * @param array - Array of any type containing one or more candidates for random picking.\n     * @return An item from the array.\n     */\n    Prando.prototype.nextArrayItem = function (array) {\n        return array[this.nextInt(0, array.length - 1)];\n    };\n    /**\n     * Generates a pseudo-random boolean.\n     *\n     * @return A value of true or false.\n     */\n    Prando.prototype.nextBoolean = function () {\n        this.recalculate();\n        return this._value > 0.5;\n    };\n    /**\n     * Skips ahead in the sequence of numbers that are being generated. This is equivalent to\n     * calling next() a specified number of times, but faster since it doesn't need to map the\n     * new random numbers to a range and return it.\n     *\n     * @param iterations - The number of items to skip ahead.\n     */\n    Prando.prototype.skip = function (iterations) {\n        if (iterations === void 0) { iterations = 1; }\n        while (iterations-- > 0) {\n            this.recalculate();\n        }\n    };\n    /**\n     * Reset the pseudo-random number sequence back to its starting seed. Further calls to next()\n     * will then produce the same sequence of numbers it had produced before. This is equivalent to\n     * creating a new Prando instance with the same seed as another Prando instance.\n     *\n     * Example:\n     * let rng = new Prando(12345678);\n     * console.log(rng.next()); // 0.6177754114889017\n     * console.log(rng.next()); // 0.5784605181725837\n     * rng.reset();\n     * console.log(rng.next()); // 0.6177754114889017 again\n     * console.log(rng.next()); // 0.5784605181725837 again\n     */\n    Prando.prototype.reset = function () {\n        this._value = this._seed;\n    };\n    // ================================================================================================================\n    // PRIVATE INTERFACE ----------------------------------------------------------------------------------------------\n    Prando.prototype.recalculate = function () {\n        this._value = this.xorshift(this._value);\n    };\n    Prando.prototype.xorshift = function (value) {\n        // Xorshift*32\n        // Based on George Marsaglia's work: http://www.jstatsoft.org/v08/i14/paper\n        value ^= value << 13;\n        value ^= value >> 17;\n        value ^= value << 5;\n        return value;\n    };\n    Prando.prototype.map = function (val, minFrom, maxFrom, minTo, maxTo) {\n        return ((val - minFrom) / (maxFrom - minFrom)) * (maxTo - minTo) + minTo;\n    };\n    Prando.prototype.hashCode = function (str) {\n        var hash = 0;\n        if (str) {\n            var l = str.length;\n            for (var i = 0; i < l; i++) {\n                hash = (hash << 5) - hash + str.charCodeAt(i);\n                hash |= 0;\n                hash = this.xorshift(hash);\n            }\n        }\n        return this.getSafeSeed(hash);\n    };\n    Prando.prototype.getSafeSeed = function (seed) {\n        if (seed === 0)\n            return 1;\n        return seed;\n    };\n    Prando.MIN = -2147483648; // Int32 min\n    Prando.MAX = 2147483647; // Int32 max\n    return Prando;\n}());\n\nexport default Prando;\n","import { Delaunay } from 'd3-delaunay';\r\nimport Prando from 'prando';\r\n\r\ninterface PolygonVertices {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface PolygonData {\r\n  index: number;\r\n  polygonIndex: number;\r\n  vertices: PolygonVertices[];\r\n  reducedVertices: PolygonVertices[];\r\n  lootBoxesCoordinates: PolygonVertices[];\r\n  gradientAreaCoordinates: PolygonVertices[];\r\n  outerBorderCoordinates: PolygonVertices[];\r\n  centroid: PolygonVertices;\r\n}\r\n\r\nexport class Polygons {\r\n  private readonly SEED: string;\r\n  private readonly GRIDSIZE: number = 7;\r\n  private readonly JITTER: number = 0.6;\r\n  \r\n  public points: PolygonVertices[] = [];\r\n  public voronoi: any;\r\n  public polygonData: PolygonData[] = [];\r\n  private deterministicRng: Prando;\r\n  private walkerIndices: number[] | undefined = undefined;\r\n  \r\n  constructor(seed : string) {\r\n    this.SEED = seed;\r\n    this.deterministicRng = new Prando(this.SEED);\r\n    this.initializePoints();\r\n    this.initializeVoronoi();\r\n  }\r\n\r\n  private initializePoints(): void {\r\n    for (let x = 1; x <= this.GRIDSIZE; x++) {\r\n      for (let y = 1; y <= this.GRIDSIZE; y++) {\r\n        this.points.push({\r\n          x: x + this.JITTER * (this.deterministicRng.next() - this.deterministicRng.next()),\r\n          y: y + this.JITTER * (this.deterministicRng.next() - this.deterministicRng.next())\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private initializeVoronoi(): void {\r\n    const delaunay = Delaunay.from(this.points, loc => loc.x, loc => loc.y);\r\n    this.voronoi = delaunay.voronoi([0, 0, this.GRIDSIZE, this.GRIDSIZE]);\r\n  }\r\n\r\n  public randomWalkGen(): number[] {\r\n    let randomWalkRng = new Prando(this.SEED);\r\n    let walker: number[] = [24];\r\n    const visited = new Set<number>([24]);\r\n    const directions = [-1, 1, -7, 7];\r\n    \r\n    const within6x6Bounds = (i: number): boolean => {\r\n      return i % 7 !== 0 && i % 7 !== 6 && i > 6 && i < 42;\r\n    };\r\n\r\n    let k = 0;\r\n    let indexTracker = 0;\r\n\r\n    while (walker.length < 20) {\r\n      const currentInd = walker[indexTracker];\r\n      let availableDirs = directions.filter(dir => {\r\n        const next = currentInd + dir;\r\n        return within6x6Bounds(next) && !visited.has(next);\r\n      });\r\n\r\n      if (availableDirs.length > 0) {\r\n        const dir = availableDirs[randomWalkRng.nextInt(0, availableDirs.length - 1)];\r\n        const next = currentInd + dir;\r\n        walker.push(next);\r\n        visited.add(next);\r\n        indexTracker = walker.length - 1;\r\n      } else {\r\n        if (indexTracker === 1) {\r\n          indexTracker = randomWalkRng.nextInt(0, walker.length - 1);\r\n        }\r\n        indexTracker--;\r\n      }\r\n\r\n      k++;\r\n      if (k > 200) {\r\n        throw new Error(\"Random walker error: Infinite loop\");\r\n      }\r\n    }\r\n    return walker;\r\n  }\r\n\r\n  public calculatePolygonData(): void {\r\n    const polygonArray: Array<Array<[number, number]>> = Array.from(this.voronoi.cellPolygons());\r\n    const indices = this.randomWalkGen();\r\n\r\n    for (let i in indices) {\r\n      const index = indices[i];\r\n      let vertices = [];\r\n      \r\n      for (let j = 0; j < (polygonArray[index] as Array<[number, number]>).length; j++) {\r\n        vertices.push({ \r\n          x: Number(polygonArray[index][j][0]), \r\n          y: Number(polygonArray[index][j][1]) \r\n        });\r\n      }\r\n      \r\n      const centroid = this.calculateCentroid(vertices);\r\n      this.polygonData.push({\r\n        index: Number(i),\r\n        polygonIndex: 0,\r\n        vertices: vertices,\r\n        reducedVertices: [],\r\n        lootBoxesCoordinates: [],\r\n        gradientAreaCoordinates: [],\r\n        outerBorderCoordinates: [],\r\n        centroid: centroid\r\n      });\r\n    }\r\n\r\n    this.addPolygonIndices(indices);\r\n    this.calculateReducedVertices();\r\n    this.calculateLootboxCoordinates();\r\n    this.calculateGradientAreaCoordinates();\r\n    this.calculateOuterBorder();\r\n  }\r\n\r\n  public getWorldBounds() {\r\n    const indices = this.walkerIndices ?? this.randomWalkGen();\r\n    let topmost, bottommost, leftmost, rightmost;\r\n\r\n    // Initialize with the first matching polygon's first vertex\r\n    const firstMatch = this.polygonData.find(polygon => indices.includes(polygon.index));\r\n    if (!firstMatch) return null;\r\n\r\n    topmost = bottommost = leftmost = rightmost = firstMatch.vertices[0];\r\n\r\n    // Now check all matching polygons\r\n    for (let polygon of this.polygonData) {\r\n      if (indices.includes(polygon.index)) {  // Changed some() to includes() for clarity\r\n        for (const vertex of polygon.vertices) {\r\n          if (vertex.y < topmost.y) topmost = vertex;\r\n          if (vertex.y > bottommost.y) bottommost = vertex;\r\n          if (vertex.x < leftmost.x) leftmost = vertex;\r\n          if (vertex.x > rightmost.x) rightmost = vertex;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      x: leftmost.x,\r\n      y: topmost.y,\r\n      width: rightmost.x - leftmost.x,\r\n      height: bottommost.y - topmost.y\r\n    };\r\n  }\r\n  private calculateCentroid(vertices: PolygonVertices[]): PolygonVertices {\r\n    let centroid = { x: 0, y: 0 };\r\n    for (const vertex of vertices) {\r\n      centroid.x += Number(vertex.x);\r\n      centroid.y += Number(vertex.y);\r\n    }\r\n    centroid.x /= vertices.length;\r\n    centroid.y /= vertices.length;\r\n    return centroid;\r\n  }\r\n\r\n  private addPolygonIndices(indices: number[]): void {\r\n    for (let i = 0; i < this.polygonData.length; i++) {\r\n      this.polygonData[i].polygonIndex = indices[i];\r\n    }\r\n  }\r\n\r\n  private calculateReducedVertices(): void {\r\n    for (const polygon of this.polygonData) {\r\n      let reducedVertices = this.calculateScaledVertices(polygon.vertices, 0.75);\r\n      polygon.reducedVertices = reducedVertices;\r\n    }\r\n  }\r\n\r\n  private calculateGradientAreaCoordinates(): void {\r\n    for (const polygon of this.polygonData) {\r\n      let gradientAreaCoordinates = this.calculateScaledVertices(polygon.vertices, 0.80);\r\n      polygon.gradientAreaCoordinates = gradientAreaCoordinates;\r\n    }\r\n  }\r\n\r\n  private calculateOuterBorder(): void {\r\n    for (const polygon of this.polygonData) {\r\n      let outerBorderCoordinates = this.calculateScaledVertices(polygon.vertices, 0.83);\r\n      polygon.outerBorderCoordinates = outerBorderCoordinates;\r\n    }\r\n  }\r\n\r\n  private calculateLootboxCoordinates(): void {\r\n    for (let i = 1; i < this.polygonData.length; i++) {\r\n      let lootboxCoordinates = this.calculateScaledVertices(this.polygonData[i].vertices, 0.3);\r\n      this.polygonData[i].lootBoxesCoordinates = lootboxCoordinates;\r\n    }\r\n  }\r\n\r\n  private calculateScaledVertices(vertices: PolygonVertices[], scale: number): PolygonVertices[] {\r\n    const centroid = this.calculateCentroid(vertices);\r\n    return vertices.map(vertex => ({\r\n      x: centroid.x + (vertex.x - centroid.x) * scale,\r\n      y: centroid.y + (vertex.y - centroid.y) * scale\r\n    }));\r\n  }\r\n}","import Phaser from 'phaser';\r\nimport { ProceduralFreeRoam } from '../scenes/Procedural-FreeRoam';\r\nimport Perlin from '../utils/perlin';\r\nimport Prando from 'prando';\r\nimport { config } from '../config/config';\r\n\r\n\r\nexport class BaseBiome {\r\n  scene: ProceduralFreeRoam;\r\n  x: number;\r\n  y: number;\r\n  tiles: Phaser.GameObjects.Group;\r\n  isLoaded: boolean;\r\n  occupiedCollidables: OccupiedArea[];\r\n  occupiedNonCollidables: OccupiedArea[];\r\n  chunkSize: number;\r\n  tileSize: number;\r\n  perlin: Perlin;\r\n  polygonIdx: number;\r\n  tileXYs: { x: number, y: number }[] = [];\r\n  isDungeon: boolean;\r\n\r\n  biomeConfig!: {\r\n    terrainSprite: string;\r\n    nonCollidableObjectSprite: string;\r\n    dungeonAsset: string;\r\n    collidableObjectSprite: string;\r\n  };\r\n  deterministicRng : Prando | undefined = undefined;\r\n  collidableOverlapThreshold: number = 30;\r\n  elevationThreshold: number = 0.06\r\n\r\n  constructor(scene: Phaser.Scene, x: number, y: number, chunkSize: number, tileSize: number, polygonIdx: number, isDungeon: boolean, perlin: Perlin) {\r\n    this.scene = scene as ProceduralFreeRoam;\r\n    // x and y of the chunk\r\n    this.x = x;\r\n    this.y = y;\r\n    this.chunkSize = chunkSize;\r\n    this.tileSize = tileSize;\r\n    this.tiles = this.scene.add.group();\r\n    this.isLoaded = false;\r\n    this.occupiedCollidables = [];\r\n    this.occupiedNonCollidables = [];\r\n    this.perlin = perlin;\r\n    this.polygonIdx = polygonIdx;\r\n    this.isDungeon = isDungeon;\r\n    this.deterministicRng = new Prando(this.scene.seed)\r\n  }\r\n\r\n  unload() {\r\n    if (this.isLoaded) {\r\n      this.tiles.clear(true, true);\r\n      this.isLoaded = false;\r\n      this.occupiedCollidables = [];\r\n      this.occupiedNonCollidables = [];\r\n      this.tileXYs = [];\r\n    }\r\n  }\r\n\r\n  load() {\r\n    if (!this.isLoaded) {\r\n      let highElevationTiles: { x: number; y: number }[] = [];\r\n      let lowElevationTiles: { x: number; y: number }[] = [];\r\n\r\n      // Generate base tiles\r\n      for (var x = 0; x < this.chunkSize; x++) {\r\n        for (var y = 0; y < this.chunkSize; y++) {\r\n          const { lowElevationTiles: newLowElevationTiles, highElevationTiles: newHighElevationTiles } = this.generateDualGridTile(x, y, highElevationTiles, lowElevationTiles);\r\n          lowElevationTiles = newLowElevationTiles;\r\n          highElevationTiles = newHighElevationTiles;\r\n        }\r\n      }\r\n\r\n      if (!this.isDungeon) {\r\n        this.placeAssets(lowElevationTiles, 'lowElevation');\r\n        this.placeAssets(highElevationTiles, 'highElevation');\r\n      }\r\n      this.isLoaded = true;\r\n    }\r\n  }\r\n\r\n  protected placeAssets(tileArray: { x: number; y: number }[], assetType: 'lowElevation' | 'highElevation') {\r\n    // place assets, override for each child class\r\n  }\r\n\r\n  private generateDualGridTile(x: number, y: number, highElevationTiles: { x: number; y: number }[], lowElevationTiles: { x: number; y: number }[]) {\r\n    var tileX = (this.x * (this.chunkSize * this.tileSize)) + (x * this.tileSize);\r\n    var tileY = (this.y * (this.chunkSize * this.tileSize)) + (y * this.tileSize);\r\n\r\n    this.tileXYs = [0, 1].flatMap(i =>\r\n      [0, 1].map(j => ({\r\n        x: (this.x * this.chunkSize * this.tileSize) + ((x + i) * this.tileSize),\r\n        y: (this.y * this.chunkSize * this.tileSize) + ((y + j) * this.tileSize)\r\n      }))\r\n    );\r\n\r\n\r\n    // place dungeon\r\n    if (this.isDungeon && this.isWithinBounds(tileX, tileY)) {\r\n      this.placeDungeonTiles(x, y);\r\n    }\r\n\r\n    // place terrain\r\n    const perlinValues = this.placeTerrainTiles();\r\n\r\n    // pushing to asset arrays\r\n    if (perlinValues[0] < this.elevationThreshold-0.1) {\r\n      lowElevationTiles.push({ x: tileX, y: tileY });\r\n    }\r\n    else if (perlinValues[0] > this.elevationThreshold+0.05) {\r\n      highElevationTiles.push({ x: tileX, y: tileY });\r\n    }\r\n\r\n    return { lowElevationTiles, highElevationTiles }\r\n  }\r\n\r\n  private placeTerrainTiles() {\r\n    let spriteKey = 0;\r\n    let perlinValues = this.tileXYs.map(({ x, y }) => {\r\n      if (!this.isWithinBounds(x, y) && this.isWithinBorderBounds(x, y)) return 1;\r\n      if (!this.isWithinBorderBounds(x, y)) {\r\n        spriteKey |= 1 << 4;\r\n        return 0;\r\n      }\r\n      return this.perlin.perlin2(x / 500, y / 500);\r\n    });\r\n\r\n    // checking tile type with perlin value\r\n    const whatAsset = (perlinValue: number) => {\r\n      return perlinValue < this.elevationThreshold ? 0 : 1;\r\n    }\r\n\r\n    // bitmasking function for tileset\r\n    for (const key in perlinValues) {\r\n      spriteKey |= whatAsset(perlinValues[key]) << Number(key);\r\n    }\r\n\r\n    const dualTileX = (this.tileXYs[0].x + this.tileXYs[2].x) / 2;\r\n    const dualTileY = (this.tileXYs[0].y + this.tileXYs[1].y) / 2;\r\n    const tile = this.scene.add.image(dualTileX, dualTileY, this.biomeConfig.terrainSprite, spriteKey).setDepth(1)\r\n    this.tiles.add(tile);\r\n\r\n    return perlinValues;\r\n  }\r\n\r\n  protected placeDungeonTiles(x: number, y: number, dungeonSize: number = 10, dungeonOffset: number = 3) {\r\n    if (x <= dungeonSize + dungeonOffset && y <= dungeonSize + dungeonOffset) {\r\n      const dualMapTileX = (this.tileXYs[0].x + this.tileXYs[2].x) / 2;\r\n      const dualMapTileY = (this.tileXYs[0].y + this.tileXYs[1].y) / 2;\r\n      if (x > dungeonOffset && y > dungeonOffset) {\r\n        const tile = this.scene.add.image(dualMapTileX, dualMapTileY, this.biomeConfig.dungeonAsset, (x - (dungeonOffset + 1)) + (y - (dungeonOffset + 1)) * 10).setDepth(4);\r\n        this.tiles.add(tile);\r\n      }\r\n    }\r\n  }\r\n\r\n  //helper functions\r\n\r\n  private isWithinBorderBounds(x: number, y: number): boolean {\r\n    if (this.polygonIdx === -1) {\r\n      return false;\r\n    }\r\n    if (this.point_in_polygon({ x, y }, this.scene.polygonData[this.polygonIdx].gradientAreaCoordinates)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  protected isWithinBounds(x: number, y: number): boolean {\r\n    if (this.polygonIdx === -1) {\r\n      return false;\r\n    }\r\n    if (this.point_in_polygon({ x, y }, this.scene.polygonData[this.polygonIdx].reducedVertices)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  protected isSpriteWithinBounds(x: number, y: number, width: number, height: number, threshold: number = 5): boolean {\r\n    if (this.polygonIdx === -1) {\r\n        return false;\r\n    }\r\n    const polygon = this.scene.polygonData[this.polygonIdx].reducedVertices;\r\n    // Convert bottom-middle coordinates to the four corners\r\n    const halfWidth = width / 2;\r\n    // Expand the check area outward by threshold amount\r\n    const bottomLeft = { x: x - halfWidth - threshold, y: y + threshold };\r\n    const bottomRight = { x: x + halfWidth + threshold, y: y + threshold };\r\n    const topLeft = { x: x - halfWidth - threshold, y: y - height - threshold };\r\n    const topRight = { x: x + halfWidth + threshold, y: y - height - threshold };\r\n    \r\n    // If ANY of these expanded points are outside the polygon, \r\n    // then the sprite is too close to the edge\r\n    return (\r\n        this.point_in_polygon(bottomLeft, polygon) &&\r\n        this.point_in_polygon(bottomRight, polygon) &&\r\n        this.point_in_polygon(topLeft, polygon) &&\r\n        this.point_in_polygon(topRight, polygon)\r\n    );\r\n}\r\n\r\n  private point_in_polygon(point: { x: number; y: number }, polygon: { x: number; y: number }[]): boolean {\r\n\r\n    const num_vertices = polygon.length;\r\n    var x = point.x;\r\n    var y = point.y;\r\n    let isInside = false;\r\n\r\n    let p1 = polygon[0];\r\n    let p2;\r\n\r\n    for (let i = 1; i <= num_vertices; i++) {\r\n      p2 = polygon[i % num_vertices];\r\n\r\n      if (y > Math.min(p1.y, p2.y)) {\r\n        if (y <= Math.max(p1.y, p2.y)) {\r\n          if (x <= Math.max(p1.x, p2.x)) {\r\n            const x_intersection = ((y - p1.y) * (p2.x - p1.x)) / (p2.y - p1.y) + p1.x;\r\n\r\n            if (p1.x === p2.x || x <= x_intersection) {\r\n              isInside = !isInside;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      p1 = p2;\r\n    }\r\n    return isInside;\r\n  }\r\n\r\n  private isOverlapping(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    options: { isCollidable: boolean }\r\n  ): boolean {\r\n    const collidableList = options.isCollidable\r\n      ? this.occupiedCollidables\r\n      : this.occupiedNonCollidables;\r\n    const threshold = options.isCollidable ? this.collidableOverlapThreshold : 0;\r\n\r\n    // Convert bottom-middle to top-left coords\r\n    const topLeftX = x - width / 2;\r\n    const topLeftY = y - height;\r\n\r\n    return collidableList.some((area) => {\r\n      const areaTopLeftX = area.x - area.width / 2;\r\n      const areaTopLeftY = area.y - area.height;\r\n\r\n      const overlaps =\r\n        topLeftX < areaTopLeftX + area.width + threshold &&\r\n        topLeftX + width > areaTopLeftX - threshold &&\r\n        topLeftY < areaTopLeftY + area.height + threshold &&\r\n        topLeftY + height > areaTopLeftY - threshold;\r\n\r\n      const fullyContained =\r\n        topLeftX >= areaTopLeftX &&\r\n        topLeftX + width <= areaTopLeftX + area.width &&\r\n        topLeftY >= areaTopLeftY &&\r\n        topLeftY + height <= areaTopLeftY + area.height;\r\n\r\n      return overlaps || fullyContained;\r\n    });\r\n  }\r\n  private isOutsideChunkBounds(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): boolean {\r\n    const threshold = this.tileSize/2;\r\n  \r\n    // Convert bottom-middle to top-left\r\n    const topLeftX = x - width / 2;\r\n    const topLeftY = y - height;\r\n\r\n    const chunkLeft = this.x * this.chunkSize * this.tileSize;\r\n    const chunkTop = this.y * this.chunkSize * this.tileSize;\r\n    const chunkRight = chunkLeft + this.chunkSize * this.tileSize;\r\n    const chunkBottom = chunkTop + this.chunkSize * this.tileSize;\r\n  \r\n    return (\r\n      topLeftX < chunkLeft + threshold || // Left boundary\r\n      topLeftX + width > chunkRight - threshold || // Right boundary\r\n      topLeftY < chunkTop + threshold || // Top boundary\r\n      topLeftY + height > chunkBottom - threshold // Bottom boundary\r\n    );\r\n  }\r\n\r\n\r\n  // Helpers for child classes\r\n\r\n  protected placeCollidableSprite(x: number, y: number, sprite: string, frameDetails: FrameDetails) {\r\n    if (!this.isOverlapping(x, y, frameDetails.width, frameDetails.height, { isCollidable: true }) && !this.isOutsideChunkBounds(x, y, frameDetails.width, frameDetails.height) && this.isSpriteWithinBounds(x, y, frameDetails.width, frameDetails.height)) {\r\n\r\n      const tile = this.scene.physics.add.sprite(x, y, sprite, frameDetails.name)\r\n        .setOrigin(0.5, 1) // Align the tile's bottom to the tile\r\n        .setDepth(frameDetails.depth);\r\n      const body = tile.body as Phaser.Physics.Arcade.Body;\r\n      body.setSize(frameDetails.collisionBounds.x, frameDetails.collisionBounds.y);\r\n      // offset to bottom center\r\n      body.offset.set(frameDetails.collisionOffset.x, frameDetails.collisionOffset.y)\r\n      tile.setPushable(false);\r\n      this.scene.collidableObjects!.add(tile);\r\n      this.tiles.add(tile);\r\n\r\n      this.occupiedCollidables.push({ x: x, y: y, width: frameDetails.width, height: frameDetails.height });\r\n\r\n    }\r\n  }\r\n\r\n  protected placeNormalSprite(x: number, y: number, sprite: string, frame: number, depth = 9.6): boolean {\r\n    if (!this.isOverlapping(x, y, this.tileSize, this.tileSize, { isCollidable: false }) && !this.isOutsideChunkBounds(x, y, this.tileSize, this.tileSize) && this.isSpriteWithinBounds(x, y, this.tileSize, this.tileSize)) {\r\n      const tile = this.scene.add.image(x, y, sprite, String(frame))\r\n        .setDepth(depth);\r\n      this.tiles.add(tile);\r\n      this.occupiedNonCollidables.push({ x, y, width: this.tileSize, height: this.tileSize });\r\n      return true;\r\n    }\r\n    return false\r\n  }\r\n\r\n  protected chooseRandomSprite(spriteIndices: number[]): number {\r\n\r\n    return this.deterministicRng!.nextArrayItem(spriteIndices);\r\n  }\r\n}\r\n\r\ninterface OccupiedArea {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nclass Tile extends Phaser.GameObjects.Sprite {\r\n  scene: Phaser.Scene;\r\n\r\n  constructor(scene: Phaser.Scene, x: number, y: number, key: string) {\r\n    super(scene, x, y, key);\r\n    this.scene = scene;\r\n    this.scene.add.existing(this);\r\n    this.setOrigin(0);\r\n  }\r\n}\r\nexport default Tile;\r\n\r\nexport type FrameDetails = {\r\n  name: string;\r\n  width: number;\r\n  height: number;\r\n  depth: number;\r\n  collisionBounds: { x: number; y: number };\r\n  collisionOffset: { x: number; y: number };\r\n};","import Perlin from \"../utils/perlin\";\r\nimport { BaseBiome, FrameDetails } from \"./BaseBiome\";\r\nimport groundRules from '../assetJson/ground-placement-rules.json'\r\n\r\nexport default class GroundBiome extends BaseBiome {\r\n  constructor(scene: Phaser.Scene, x: number, y: number, chunkSize: number, tileSize: number, polygonIdx: number, isDungeon: boolean, perlin: Perlin) {\r\n    super(scene, x, y, chunkSize, tileSize, polygonIdx, isDungeon, perlin);\r\n\r\n    this.biomeConfig = {\r\n      dungeonAsset: 'ground-biome-dungeon',\r\n      terrainSprite: 'ground-biome',\r\n      collidableObjectSprite: 'ground-atlas',\r\n      nonCollidableObjectSprite: 'groundNonCollidable',\r\n    }\r\n    this.collidableOverlapThreshold = 10;\r\n  }\r\n\r\n  protected placeAssets(tileArray: { x: number; y: number }[], assetType: 'lowElevation' | 'highElevation') {\r\n\r\n    tileArray.forEach(({ x, y }) => {\r\n      const assetNoise = this.perlin.perlin2(x / 500, y / 500) - this.perlin.perlin2(x / 300, y / 300) * 0.5;\r\n\r\n      var normalizedNoise = (assetNoise + 1) / 2;\r\n      var color = Phaser.Display.Color.Interpolate.ColorWithColor(\r\n        new Phaser.Display.Color(0, 255, 0),  // Blue for low values\r\n        new Phaser.Display.Color(255, 0, 0),  // // Red for high values\r\n        100,\r\n        Math.floor(normalizedNoise * 100)  // Convert normalized value to range 0-100\r\n      );\r\n      var hexColor = Phaser.Display.Color.GetColor(color.r, color.g, color.b);\r\n      if (this.isWithinBounds(x, y)) {\r\n        // if (assetNoise > -1 && assetNoise < -0.5) {\r\n        // this.scene.add.circle(x, y, 4, hexColor, 1).setDepth(9.5);\r\n        // }\r\n      }\r\n\r\n      const biomeConfig = groundRules[assetType]\r\n\r\n      for (const asset of biomeConfig) {\r\n        const [minRange, maxRange] = asset.range;\r\n\r\n        if (assetNoise >= minRange && assetNoise < maxRange) {\r\n          const frameDetails: FrameDetails = {\r\n            name: asset.name,\r\n            width: asset.collidableFrameWidth,\r\n            height: asset.collidableFrameHeight,\r\n            depth: asset.collidableFrameDepth,\r\n            collisionBounds: asset.collisionBounds,\r\n            collisionOffset: asset.collisionOffset,\r\n          }\r\n          this.placeCollidableSprite(x, y, this.biomeConfig.collidableObjectSprite, frameDetails);\r\n        }\r\n        if (asset.extraCondition) {\r\n          const { min, max } = asset.extraCondition;\r\n          if (assetNoise < min || assetNoise >= max) continue;\r\n        }\r\n\r\n        // Place normal sprite\r\n        if (asset.nonCollidableFrames) {\r\n          const frame = this.chooseRandomSprite(asset.nonCollidableFrames);\r\n          if (frame !== -1) {\r\n            // 2-frame sprites\r\n            if (frame == 1 || frame == 12) {\r\n              const isPlaced = this.placeNormalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n              if (isPlaced) {\r\n                this.placeNormalSprite(x + this.tileSize, y, this.biomeConfig.nonCollidableObjectSprite, frame + 1);\r\n              }\r\n            }\r\n            this.placeNormalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  protected placeDungeonTiles(x: number, y: number, dungeonSize: number = 10, dungeonOffset: number = 3): void {\r\n    if (x <= dungeonSize + dungeonOffset && y <= dungeonSize + dungeonOffset) {\r\n      const dualMapTileX = (this.tileXYs[0].x + this.tileXYs[2].x) / 2;\r\n      const dualMapTileY = (this.tileXYs[0].y + this.tileXYs[1].y) / 2;\r\n      if (x > dungeonOffset && y > dungeonOffset) {\r\n        const tile = this.scene.physics.add.image(dualMapTileX, dualMapTileY, this.biomeConfig.dungeonAsset, (x - (dungeonOffset + 1)) + (y - (dungeonOffset + 1)) * 10).setDepth(4);\r\n        if (y > 2 + dungeonOffset && y < 9 + dungeonOffset) {\r\n          tile.setPushable(false)\r\n          this.scene.collidableObjects!.add(tile)\r\n        }\r\n        this.tiles.add(tile);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Perlin from \"../utils/perlin\";\r\nimport { BaseBiome, FrameDetails } from \"./BaseBiome\";\r\nimport flyingRules from '../assetJson/flying-placement-rules.json'\r\n\r\nexport default class FlyingBiome extends BaseBiome {\r\n  constructor(scene: Phaser.Scene, x: number, y: number, chunkSize: number, tileSize: number, polygonIdx: number, isDungeon: boolean, perlin: Perlin) {\r\n    super(scene, x, y, chunkSize, tileSize, polygonIdx, isDungeon, perlin)\r\n\r\n    this.biomeConfig = {\r\n      dungeonAsset: 'flying-biome-dungeon',\r\n      terrainSprite: 'flying-biome',\r\n      collidableObjectSprite: 'flying-atlas',\r\n      nonCollidableObjectSprite: 'flyingNonCollidable',\r\n    }\r\n    this.elevationThreshold = 0.2\r\n  }\r\n\r\n  protected placeAssets(tileArray: { x: number; y: number }[], assetType: 'lowElevation' | 'highElevation') {\r\n\r\n    tileArray.forEach(({ x, y }) => {\r\n      const assetNoise = this.perlin.perlin2(x / 500, y / 500) - this.perlin.perlin2(x / 300, y / 300) * 0.5;\r\n\r\n      var normalizedNoise = (assetNoise + 1) / 2;\r\n      var color = Phaser.Display.Color.Interpolate.ColorWithColor(\r\n        new Phaser.Display.Color(0, 255, 0),  // Blue for low values\r\n        new Phaser.Display.Color(255, 0, 0),  // // Red for high values\r\n        100,\r\n        Math.floor(normalizedNoise * 100)  // Convert normalized value to range 0-100\r\n      );\r\n      var hexColor = Phaser.Display.Color.GetColor(color.r, color.g, color.b);\r\n      if (this.isWithinBounds(x, y)) {\r\n        // if (assetNoise > -0.21 && assetNoise < -0.17) {\r\n        // this.scene.add.circle(x, y, 4, hexColor, 1).setDepth(12);\r\n        // }\r\n      }\r\n\r\n      const biomeConfig = flyingRules[assetType]\r\n\r\n      for (const asset of biomeConfig) {\r\n        const [minRange, maxRange] = asset.range;\r\n\r\n        if (assetNoise >= minRange && assetNoise < maxRange) {\r\n          const frameDetails: FrameDetails = {\r\n            name: asset.name,\r\n            width: asset.collidableFrameWidth,\r\n            height: asset.collidableFrameHeight,\r\n            depth: asset.collidableFrameDepth,\r\n            collisionBounds: asset.collisionBounds,\r\n            collisionOffset: asset.collisionOffset\r\n          }\r\n          this.placeCollidableSprite(x, y, this.biomeConfig.collidableObjectSprite, frameDetails);\r\n        }\r\n        if (asset.extraCondition) {\r\n          const { min, max } = asset.extraCondition;\r\n          if (assetNoise > min && assetNoise < max) {\r\n            const frame = this.chooseRandomSprite(asset.nonCollidableFrames);\r\n            if (frame !== -1) {\r\n              if (frame == 7) {\r\n                const isPlaced = this.placeNormalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n                if (isPlaced) {\r\n                  this.placeNormalSprite(x + this.tileSize, y, this.biomeConfig.nonCollidableObjectSprite, frame + 1);\r\n                }\r\n              }\r\n              if (frame == 9) {\r\n                const isPlaced = this.placeNormalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n                if (isPlaced) {\r\n                  this.placeNormalSprite(x, y + this.tileSize, this.biomeConfig.nonCollidableObjectSprite, frame + 1);\r\n                }\r\n              }\r\n              this.placeNormalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    );\r\n  }\r\n}","import Perlin from \"../utils/perlin\";\r\nimport { BaseBiome, FrameDetails } from \"./BaseBiome\";\r\nimport steelRules from '../assetJson/steel-placement-rules.json'\r\n\r\nexport default class SteelBiome extends BaseBiome {\r\n  constructor(scene: Phaser.Scene, x: number, y: number, chunkSize: number, tileSize: number, polygonIdx: number, isDungeon: boolean = false, perlin: Perlin) {\r\n    super(scene, x, y, chunkSize, tileSize, polygonIdx, isDungeon, perlin);\r\n\r\n    this.biomeConfig = {\r\n      dungeonAsset: 'steel-biome-dungeon',\r\n      terrainSprite: 'steel-biome',\r\n      collidableObjectSprite: 'steel-atlas',\r\n      nonCollidableObjectSprite: 'steelNonCollidable',\r\n    }\r\n    this.collidableOverlapThreshold = 0\r\n  }\r\n\r\n  protected placeAssets(tileArray: { x: number; y: number }[], assetType: 'lowElevation' | 'highElevation') {\r\n\r\n    tileArray.forEach(({ x, y }) => {\r\n      const assetNoise = this.perlin.perlin2(x / 500, y / 500) - this.perlin.perlin2(x / 300, y / 300) * 0.5;\r\n\r\n      var normalizedNoise = (assetNoise + 1) / 2;\r\n      var color = Phaser.Display.Color.Interpolate.ColorWithColor(\r\n        new Phaser.Display.Color(0, 255, 0),  // Blue for low values\r\n        new Phaser.Display.Color(255, 0, 0),  // // Red for high values\r\n        100,                     // Steps in gradient (arbitrary, can be tuned)\r\n        Math.floor(normalizedNoise * 100)  // Convert normalized value to range 0-100\r\n      );\r\n      var hexColor = Phaser.Display.Color.GetColor(color.r, color.g, color.b);\r\n      if (this.isWithinBounds(x, y)) {\r\n        // if (assetNoise > -0.21 && assetNoise < -0.17) {\r\n          // this.scene.add.circle(x, y, 4, hexColor, 1).setDepth(12);\r\n        // }\r\n      }\r\n      // this.scene.add.text(x, y, String(assetNoise.toPrecision(2)), {\r\n      //   fontSize: '5px',\r\n      //   color: 'white',\r\n\r\n      // }).setDepth(10);\r\n\r\n      const biomeConfig = steelRules[assetType]\r\n\r\n      for (const asset of biomeConfig) {\r\n        const [minRange, maxRange] = asset.range;\r\n\r\n        if (assetNoise >= minRange && assetNoise < maxRange) {\r\n          const frameDetails: FrameDetails = {\r\n            name: asset.name,\r\n            width: asset.collidableFrameWidth,\r\n            height: asset.collidableFrameHeight,\r\n            depth: asset.collidableFrameDepth,\r\n            collisionBounds: asset.collisionBounds,\r\n            collisionOffset: asset.collisionOffset\r\n          }\r\n          this.placeCollidableSprite(x, y, this.biomeConfig.collidableObjectSprite, frameDetails);\r\n        }\r\n        if (asset.extraCondition) {\r\n          const { min, max } = asset.extraCondition;\r\n          if (assetNoise > min && assetNoise < max) {\r\n            const frame = this.chooseRandomSprite(asset.nonCollidableFrames);\r\n            if (frame !== -1) {\r\n              this.placeNormalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    );\r\n  }\r\n}","import Perlin from \"../utils/perlin\"\r\nimport { BaseBiome, FrameDetails } from \"./BaseBiome\"\r\nimport psychicRules from '../assetJson/psychic-placement-rules.json'\r\n\r\nexport default class PsychicBiome extends BaseBiome {\r\n  constructor(scene: Phaser.Scene, x: number, y: number, chunkSize: number, tileSize: number, polygonIdx: number, isDungeon: boolean, perlin: Perlin) {\r\n    super(scene, x, y, chunkSize, tileSize, polygonIdx, isDungeon, perlin)\r\n\r\n    this.biomeConfig = {\r\n      dungeonAsset: 'psychic-biome-dungeon',\r\n      terrainSprite: 'psychic-biome',\r\n      collidableObjectSprite: 'psychic-atlas',\r\n      nonCollidableObjectSprite: 'psychicNonCollidable',\r\n    }\r\n  }\r\n\r\n  protected placeAssets(tileArray: { x: number; y: number }[], assetType: 'lowElevation' | 'highElevation') {\r\n\r\n    tileArray.forEach(({ x, y }) => {\r\n      const assetNoise = this.perlin.perlin2(x / 300, y / 300);\r\n\r\n      var normalizedNoise = (assetNoise + 1) / 2;\r\n      var color = Phaser.Display.Color.Interpolate.ColorWithColor(\r\n        new Phaser.Display.Color(0, 255, 0),  // Blue for low values\r\n        new Phaser.Display.Color(255, 0, 0),  // // Red for high values\r\n        100,                     // Steps in gradient (arbitrary, can be tuned)\r\n        Math.floor(normalizedNoise * 100)  // Convert normalized value to range 0-100\r\n      );\r\n      var hexColor = Phaser.Display.Color.GetColor(color.r, color.g, color.b);\r\n      if (this.isWithinBounds(x, y)) {\r\n        // if (assetNoise > -0.21 && assetNoise < -0.17) {\r\n        // this.scene.add.circle(x, y, 4, hexColor, 1).setDepth(12);\r\n        // }\r\n      }\r\n      // this.scene.add.text(x, y, String(assetNoise.toPrecision(2)), {\r\n      //   fontSize: '5px',\r\n      //   color: 'white',\r\n\r\n      // }).setDepth(10);\r\n\r\n      const biomeConfig = psychicRules[assetType]\r\n\r\n      for (const asset of biomeConfig) {\r\n        const [minRange, maxRange] = asset.range;\r\n\r\n        if (assetNoise >= minRange && assetNoise < maxRange) {\r\n          const frameDetails: FrameDetails = {\r\n            name: asset.name,\r\n            width: asset.collidableFrameWidth,\r\n            height: asset.collidableFrameHeight,\r\n            depth: asset.collidableFrameDepth,\r\n            collisionBounds: asset.collisionBounds,\r\n            collisionOffset: asset.collisionOffset\r\n          }\r\n          this.placeCollidableSprite(x, y, this.biomeConfig.collidableObjectSprite, frameDetails);\r\n        }\r\n        if (asset.extraCondition) {\r\n          const { min, max } = asset.extraCondition;\r\n          if (assetNoise < min || assetNoise >= max) continue;\r\n        }\r\n\r\n        // Place normal sprite\r\n        if (asset.nonCollidableFrames) {\r\n          const frame = this.chooseRandomSprite(asset.nonCollidableFrames);\r\n          if (frame !== -1) {\r\n            switch (frame) {\r\n              case 0:\r\n              case 15:\r\n                this.placeVerticalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n                break;\r\n              case 14:\r\n              case 17:\r\n              case 22:\r\n              case 23:\r\n              case 24:\r\n                this.placeNormalSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n                break;\r\n              default:\r\n                this.placeSquareSprite(x, y, this.biomeConfig.nonCollidableObjectSprite, frame);\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  placeSquareSprite(x: number, y: number, spriteKey: string, frame: number) {\r\n    const placementParams: [number, number, string, number][] = [\r\n      [x, y, spriteKey, frame],\r\n      [x + this.tileSize, y, spriteKey, frame + 1],\r\n      [x, y + this.tileSize, spriteKey, frame + 2],\r\n      [x + this.tileSize, y + this.tileSize, spriteKey, frame + 3],\r\n\r\n\r\n    ]\r\n    for (const params of placementParams) {\r\n      if (!this.placeNormalSprite(...params)) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  placeVerticalSprite(x: number, y: number, spriteKey: string, frame: number) {\r\n    const placementParams: [number, number, string, number][] = [\r\n      [x, y, spriteKey, frame],\r\n      [x, y + this.tileSize, spriteKey, frame + 1],\r\n    ]\r\n    for (const params of placementParams) {\r\n      if (!this.placeNormalSprite(...params)) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected placeDungeonTiles(x: number, y: number, dungeonSize: number = 10, dungeonOffset: number = 3): void {\r\n    if (x <= dungeonSize + dungeonOffset && y <= dungeonSize + dungeonOffset) {\r\n      const dualMapTileX = (this.tileXYs[0].x + this.tileXYs[2].x) / 2;\r\n      const dualMapTileY = (this.tileXYs[0].y + this.tileXYs[1].y) / 2;\r\n      if (x > dungeonOffset && y > dungeonOffset) {\r\n        const tile = this.scene.physics.add.image(dualMapTileX, dualMapTileY, this.biomeConfig.dungeonAsset, (x - (dungeonOffset + 1)) + (y - (dungeonOffset + 1)) * 10).setDepth(4);\r\n        if (y > 2+ dungeonOffset && y < 7 + dungeonOffset) {\r\n          tile.setPushable(false)\r\n          this.scene.collidableObjects!.add(tile)\r\n        }\r\n        this.tiles.add(tile);\r\n      }\r\n    }\r\n  }\r\n}","\r\nexport type LootboxDetails = {\r\n\tisOpen: boolean;\r\n\tID: number;\r\n};\r\nexport type Animation = {\r\n\tstartFrame: number;\r\n\tendFrame: number;\r\n};\r\n\r\nexport type Animations = {\r\n\t[key: string]: Animation;\r\n};\r\n\r\nexport enum RegionName {\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tCENTRAL = \"CENTRAL\",\r\n}\r\n\r\nexport enum Layer {\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tBELOW_PLAYER = \"BELOW_PLAYER_LAYER\",\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tABOVE_PLAYER = \"ABOVE_PLAYER_LAYER\",\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tOBJECTS = \"OBJECTS_LAYER\",\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tPORTAL_LAYER = \"PORTAL_LAYER\",\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tPORTAL_LAYER_ABOVE = \"PORTAL_LAYER_ABOVE\",\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tEFFECT_LAYER = \"EFFECT_LAYER\",\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tGLTICH_LAYER = \"GLITCH_OVERLAY\"\r\n}\r\n\r\nexport type Asset = {\r\n\turl: string;\r\n\tkey: string;\r\n};\r\n\r\nexport type RegionAsset = {\r\n\tmap: Asset;\r\n\ttileset: Asset;\r\n\toverlay?: Asset;\r\n\tglitchTiles?: Asset;\r\n\tglitchMap?: Asset;\r\n};\r\n\r\nexport type Point = {\r\n\tx: number;\r\n\ty: number;\r\n};\r\n\r\nexport type ArenaDetails = {\r\n\tid: number;\r\n\tcoordinates: Point;\r\n};\r\n\r\nexport type TeleporterDetails = {\r\n\tportal?: RegionAsset;\r\n\tanchorPoint: Point;\r\n\teffectMap: Asset;\r\n\tstaticAnim: boolean;\r\n};\r\n\r\nexport type FlagMapDetails = {\r\n\tmap: Asset;\r\n};\r\n\r\nexport type Interactives = {\r\n\tname: string;\r\n\timage: Asset;\r\n\tevent: string;\r\n\tcoordinates: Point;\r\n}\r\n\r\nexport type RegionType = {\r\n\tname: RegionName;\r\n\tasset: RegionAsset;\r\n\tlootboxesDetails?: LootboxDetails[];\r\n\tspawnPoint: Point;\r\n\tTeleporter: TeleporterDetails;\r\n\tFlag?: FlagMapDetails;\r\n\tDungeon?: Point\r\n\tInteractives?: Interactives[];\r\n};\r\n","import { RegionName } from \"../types.d\";\r\nconst getImageURL = (image: string) => {\r\n\treturn `/assets/phaser/tilesets/${image}`;\r\n}\r\n\r\nconst getCharacterSpriteURL = (character: string) => {\r\n\treturn `/assets/phaser/characters/${character}`;\r\n};\r\n\r\nconst getAssetURL = (image: string) => {\r\n\treturn `/assets/phaser/assetSprites/${image}`;\r\n}\r\n\r\nconst getJoystickAsset = (image: string) => {\r\n\treturn `/assets/phaser/joystickAssets/${image}`;\r\n}\r\n\r\nfunction stringToRegionName(value: string): RegionName | undefined {\r\n\tswitch (value) {\r\n\t\tcase \"CENTRAL\":\r\n\t\t\treturn RegionName.CENTRAL;\r\n\t\tdefault:\r\n\t\t\treturn undefined; \r\n\t}\r\n}\r\n\r\nfunction regionNameToString(region: RegionName): string {\r\n\tswitch (region) {\r\n\t\tcase RegionName.CENTRAL:\r\n\t\t\treturn \"CENTRAL\";\r\n\t}\r\n}\r\n\r\nexport { getImageURL, getCharacterSpriteURL, stringToRegionName, regionNameToString, getAssetURL, getJoystickAsset };\r\n","import Perlin from \"../utils/perlin\";\r\nimport { BaseBiome } from \"./BaseBiome\";\r\n\r\nexport default class FlyingBiome extends BaseBiome {\r\n  constructor(scene: Phaser.Scene, x: number, y: number, chunkSize: number, tileSize: number, polygonIdx: number, perlin: Perlin) {\r\n    super(scene, x, y, chunkSize, tileSize, polygonIdx, false, perlin)\r\n\r\n    this.biomeConfig = {\r\n      dungeonAsset: 'ground-biome-dungeon',\r\n      terrainSprite: 'ground-biome',\r\n      collidableObjectSprite: 'ground-biome-collidable',\r\n      nonCollidableObjectSprite: 'ground-biome-non-collidable',\r\n    }\r\n  }\r\n\r\n  unload(): void {\r\n    if (this.isLoaded) {\r\n      this.isLoaded = false;\r\n      this.isDungeon = false;\r\n      this.tiles.clear(true, true);\r\n    }\r\n  }\r\n\r\n  load(): void {\r\n    if (!this.isLoaded) {\r\n      for (var x = 0; x < this.chunkSize; x++) {\r\n        for (var y = 0; y < this.chunkSize; y++) {\r\n          var tileX = (this.x * (this.chunkSize * this.tileSize)) + (x * this.tileSize) + this.tileSize / 2;\r\n          var tileY = (this.y * (this.chunkSize * this.tileSize)) + (y * this.tileSize) + this.tileSize / 2;\r\n          const noise = this.perlin.perlin2(tileX / 100, tileY / 100);\r\n          let frame = 16\r\n          if(noise > 0.2) frame = 32;\r\n          const tile = this.scene.add.image(tileX, tileY, this.biomeConfig.terrainSprite, frame);\r\n          this.tiles.add(tile);\r\n        }\r\n      }\r\n      this.isLoaded = true;\r\n    }\r\n  }\r\n}","import { GameObjects } from \"phaser\";\r\nimport { ProceduralFreeRoam } from \"../scenes/Procedural-FreeRoam\"; \r\nimport { config } from \"../config/config\";\r\n\r\nclass Lootbox extends GameObjects.Image {\r\n\tID: number;\r\n\tisOpened: boolean;\r\n\tcanOpenLootbox = false;\r\n\tparentScene: ProceduralFreeRoam;\r\n\topenImage: Phaser.GameObjects.Image | undefined = undefined;\r\n\topenInProgess = false;\r\n\r\n\tconstructor(\r\n\t\tparentScene: ProceduralFreeRoam,\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tisOpened: boolean,\r\n\t\tID: number\r\n\t) {\r\n\t\tsuper(parentScene, x + parentScene.tileSize, y, isOpened ? config.lootboxOpen.key : config.lootboxClosed.key);\r\n\t\tthis.setDepth(4);\r\n\t\tthis.isOpened = isOpened;\r\n\t\tthis.parentScene = parentScene;\r\n\t\tthis.ID = ID;\r\n\r\n\t\tthis.scale = 0.8; // Set scale for visibility\r\n\r\n\t\tparentScene.add.existing(this);\r\n\t}\r\n\r\n\tcheckIfPlayerIsNear(): boolean {\r\n\t\tif (!this.parentScene.player) return false;\r\n\r\n\t\treturn Phaser.Math.Distance.Between(\r\n\t\t\tthis.parentScene.player.x, this.parentScene.player.y,\r\n\t\t\tthis.x, this.y\r\n\t\t) < 50; // Adjust proximity range\r\n\t}\r\n\r\n\tshowPopup(): void {\r\n\t\tif (!this.openImage) {\r\n\t\t\tthis.openImage = this.parentScene.add.image(this.x, this.y - 40, config.openLootbox.key).setDepth(10).setScale(0.4);\r\n\t\t}\r\n\t}\r\n\r\n\ttriggerOpen(): void {\r\n\t\tif (this.openInProgess) return;\r\n\r\n\t\tthis.openInProgess = true;\r\n\t\tif (this.openImage) {\r\n\t\t\tconsole.log(\"Destroying openImage:\", this.openImage); // Debug log\r\n\t\t\tthis.openImage.destroy();\r\n\t\t\tthis.openImage = undefined;\r\n\t\t}\r\n\r\n\t\t\r\n\t\tthis.Open();\r\n\t}\r\n\r\n\tOpen(): void {\r\n\t\tthis.openInProgess = false;\r\n\t\tthis.isOpened = true;\r\n\t\tthis.setTexture(config.lootboxOpen.key);\r\n\t\tif (this.openImage) {\r\n\t\t\tconsole.log(\"Destroying openImage in Open method:\", this.openImage); // Debug log\r\n\t\t\tthis.openImage.destroy();\r\n\t\t\tthis.openImage = undefined;\r\n\t\t}\r\n\t\t//this.saveState();\r\n\t}\r\n\tsaveState(): void {\r\n\t\tconst lootboxState = JSON.parse(localStorage.getItem('lootboxState') || '{}');\r\n\t\tlootboxState[this.ID] = this.isOpened;\r\n\t\tlocalStorage.setItem('lootboxState', JSON.stringify(lootboxState));\r\n\t}\r\n\r\n\tloadState(): void {\r\n\t\tconst lootboxState = JSON.parse(localStorage.getItem('lootboxState') || '{}');\r\n\t\tthis.isOpened = lootboxState[this.ID] || false;\r\n\t\tthis.setTexture(this.isOpened ? config.lootboxOpen.key : config.lootboxClosed.key);\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tif (this.isOpened) return;\r\n\r\n\t\tconst isNear = this.checkIfPlayerIsNear();\r\n\r\n\t\tif (isNear && !this.canOpenLootbox) {\r\n\t\t\tthis.showPopup();\r\n\t\t} else if (!isNear && this.canOpenLootbox) {\r\n\t\t\tif (this.openImage) {\r\n\t\t\t\tconsole.log(\"Destroying openImage in Open method:\", this.openImage); // Debug log\r\n\t\t\t\tthis.openImage.destroy();\r\n\t\t\t\tthis.openImage = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.canOpenLootbox = isNear;\r\n\r\n\t\tif (this.canOpenLootbox && !this.openInProgess && this.parentScene.ekey!.isDown) {\r\n\t\t\tthis.triggerOpen();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Lootbox;\r\n","import Prando from 'prando'\r\n\r\nexport function dungeonChunkCoordinates(centroid: { x: number, y: number }, chunkSize: number, tileSize: number, seed: string) {\r\n  const rng = new Prando(seed)\r\n  const xDisplacement = rng.nextInt(-1, 1);\r\n  const yDisplacement = rng.nextInt(-1, 1);\r\n\r\n  var x = (chunkSize * tileSize) * Math.round((centroid.x + xDisplacement) / (chunkSize * tileSize));\r\n  var y = (chunkSize * tileSize) * Math.round((centroid.y + yDisplacement) / (chunkSize * tileSize));\r\n\r\n  x = x / chunkSize/tileSize;\r\n  y = y / chunkSize/tileSize;\r\n\r\n  return { x, y }\r\n}\r\n","class Grad {\r\n  constructor(readonly x: number, readonly y: number, readonly z: number) { }\r\n\r\n  dot2(x: number, y: number): number {\r\n    return this.x * x + this.y * y;\r\n  }\r\n\r\n  dot3(x: number, y: number, z: number): number {\r\n    return this.x * x + this.y * y + this.z * z;\r\n  }\r\n}\r\n\r\ninterface PeakPoint {\r\n  x: number;\r\n  y: number;\r\n  intensity: number;\r\n  falloffRadius: number;\r\n}\r\n\r\n\r\nclass Perlin {\r\n  readonly permutationTable = [\r\n    151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240,\r\n    21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88,\r\n    237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83,\r\n    111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80,\r\n    73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64,\r\n    52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182,\r\n    189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22,\r\n    39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210,\r\n    144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84,\r\n    204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78,\r\n    66, 215, 61, 156, 180,\r\n  ];\r\n\r\n  readonly grad3 = [\r\n    new Grad(1, 1, 0),\r\n    new Grad(-1, 1, 0),\r\n    new Grad(1, -1, 0),\r\n    new Grad(-1, -1, 0),\r\n    new Grad(1, 0, 1),\r\n    new Grad(-1, 0, 1),\r\n    new Grad(1, 0, -1),\r\n    new Grad(-1, 0, -1),\r\n    new Grad(0, 1, 1),\r\n    new Grad(0, -1, 1),\r\n    new Grad(0, 1, -1),\r\n    new Grad(0, -1, -1),\r\n  ];\r\n\r\n  readonly perm: number[] = new Array(512);\r\n  readonly gradP: Grad[] = new Array(512);\r\n  private peakPoints: PeakPoint[] = [];\r\n\r\n  readonly F2 = 0.5 * (Math.sqrt(3) - 1);\r\n  readonly G2 = (3 - Math.sqrt(3)) / 6;\r\n\r\n  readonly F3 = 1 / 3;\r\n  readonly G3 = 1 / 6;\r\n\r\n  constructor(seed = 0, peakPoints: PeakPoint[] = []) {\r\n    if (seed > 0 && seed < 1) {\r\n      // Scale the seed out\r\n      seed *= 65536;\r\n    }\r\n\r\n    seed = Math.floor(seed);\r\n    if (seed < 256) {\r\n      seed |= seed << 8;\r\n    }\r\n\r\n    for (let i = 0; i < 256; i++) {\r\n      let v: number;\r\n      if (i & 1) {\r\n        v = this.permutationTable[i] ^ (seed & 255);\r\n      } else {\r\n        v = this.permutationTable[i] ^ ((seed >> 8) & 255);\r\n      }\r\n\r\n      this.perm[i] = this.perm[i + 256] = v;\r\n      this.gradP[i] = this.gradP[i + 256] = this.grad3[v % 12];\r\n    }\r\n    this.peakPoints = peakPoints;\r\n  }\r\n\r\n  simplex2(xin: number, yin: number): number {\r\n    let n0: number, n1: number, n2: number; // Noise contributions from the three corners\r\n    // Skew the input space to determine which simplex cell we're in\r\n    const s = (xin + yin) * this.F2; // Hairy factor for 2D\r\n    let i = Math.floor(xin + s);\r\n    let j = Math.floor(yin + s);\r\n    const t = (i + j) * this.G2;\r\n    const x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n    const y0 = yin - j + t;\r\n    // For the 2D case, the simplex shape is an equilateral triangle.\r\n    // Determine which simplex we are in.\r\n    let i1: number, j1: number; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n    if (x0 > y0) {\r\n      // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n      i1 = 1;\r\n      j1 = 0;\r\n    } else {\r\n      // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n      i1 = 0;\r\n      j1 = 1;\r\n    }\r\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n    // c = (3-sqrt(3))/6\r\n    const x1 = x0 - i1 + this.G2; // Offsets for middle corner in (x,y) unskewed coords\r\n    const y1 = y0 - j1 + this.G2;\r\n    const x2 = x0 - 1 + 2 * this.G2; // Offsets for last corner in (x,y) unskewed coords\r\n    const y2 = y0 - 1 + 2 * this.G2;\r\n    // Work out the hashed gradient indices of the three simplex corners\r\n    i &= 255;\r\n    j &= 255;\r\n    const gi0 = this.gradP[i + this.perm[j]];\r\n    const gi1 = this.gradP[i + i1 + this.perm[j + j1]];\r\n    const gi2 = this.gradP[i + 1 + this.perm[j + 1]];\r\n    // Calculate the contribution from the three corners\r\n    let t0 = 0.5 - x0 * x0 - y0 * y0;\r\n    if (t0 < 0) {\r\n      n0 = 0;\r\n    } else {\r\n      t0 *= t0;\r\n      n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\r\n    }\r\n    let t1 = 0.5 - x1 * x1 - y1 * y1;\r\n    if (t1 < 0) {\r\n      n1 = 0;\r\n    } else {\r\n      t1 *= t1;\r\n      n1 = t1 * t1 * gi1.dot2(x1, y1);\r\n    }\r\n    let t2 = 0.5 - x2 * x2 - y2 * y2;\r\n    if (t2 < 0) {\r\n      n2 = 0;\r\n    } else {\r\n      t2 *= t2;\r\n      n2 = t2 * t2 * gi2.dot2(x2, y2);\r\n    }\r\n    // Add contributions from each corner to get the final noise value.\r\n    // The result is scaled to return values in the interval [-1,1].\r\n    return 70 * (n0 + n1 + n2);\r\n  }\r\n\r\n  simplex3(xin: number, yin: number, zin: number): number {\r\n    let n0: number, n1: number, n2: number, n3: number; // Noise contributions from the four corners\r\n\r\n    // Skew the input space to determine which simplex cell we're in\r\n    const s = (xin + yin + zin) * this.F3; // Hairy factor for 2D\r\n    let i = Math.floor(xin + s);\r\n    let j = Math.floor(yin + s);\r\n    let k = Math.floor(zin + s);\r\n\r\n    const t = (i + j + k) * this.G3;\r\n    const x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n    const y0 = yin - j + t;\r\n    const z0 = zin - k + t;\r\n\r\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n    // Determine which simplex we are in.\r\n    let i1: number, j1: number, k1: number; // Offsets for second corner of simplex in (i,j,k) coords\r\n    let i2: number, j2: number, k2: number; // Offsets for third corner of simplex in (i,j,k) coords\r\n    if (x0 >= y0) {\r\n      if (y0 >= z0) {\r\n        i1 = 1;\r\n        j1 = 0;\r\n        k1 = 0;\r\n        i2 = 1;\r\n        j2 = 1;\r\n        k2 = 0;\r\n      } else if (x0 >= z0) {\r\n        i1 = 1;\r\n        j1 = 0;\r\n        k1 = 0;\r\n        i2 = 1;\r\n        j2 = 0;\r\n        k2 = 1;\r\n      } else {\r\n        i1 = 0;\r\n        j1 = 0;\r\n        k1 = 1;\r\n        i2 = 1;\r\n        j2 = 0;\r\n        k2 = 1;\r\n      }\r\n    } else {\r\n      if (y0 < z0) {\r\n        i1 = 0;\r\n        j1 = 0;\r\n        k1 = 1;\r\n        i2 = 0;\r\n        j2 = 1;\r\n        k2 = 1;\r\n      } else if (x0 < z0) {\r\n        i1 = 0;\r\n        j1 = 1;\r\n        k1 = 0;\r\n        i2 = 0;\r\n        j2 = 1;\r\n        k2 = 1;\r\n      } else {\r\n        i1 = 0;\r\n        j1 = 1;\r\n        k1 = 0;\r\n        i2 = 1;\r\n        j2 = 1;\r\n        k2 = 0;\r\n      }\r\n    }\r\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n    // c = 1/6.\r\n    const x1 = x0 - i1 + this.G3; // Offsets for second corner\r\n    const y1 = y0 - j1 + this.G3;\r\n    const z1 = z0 - k1 + this.G3;\r\n\r\n    const x2 = x0 - i2 + 2 * this.G3; // Offsets for third corner\r\n    const y2 = y0 - j2 + 2 * this.G3;\r\n    const z2 = z0 - k2 + 2 * this.G3;\r\n\r\n    const x3 = x0 - 1 + 3 * this.G3; // Offsets for fourth corner\r\n    const y3 = y0 - 1 + 3 * this.G3;\r\n    const z3 = z0 - 1 + 3 * this.G3;\r\n\r\n    // Work out the hashed gradient indices of the four simplex corners\r\n    i &= 255;\r\n    j &= 255;\r\n    k &= 255;\r\n    const gi0 = this.gradP[i + this.perm[j + this.perm[k]]];\r\n    const gi1 = this.gradP[i + i1 + this.perm[j + j1 + this.perm[k + k1]]];\r\n    const gi2 = this.gradP[i + i2 + this.perm[j + j2 + this.perm[k + k2]]];\r\n    const gi3 = this.gradP[i + 1 + this.perm[j + 1 + this.perm[k + 1]]];\r\n\r\n    // Calculate the contribution from the four corners\r\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\r\n    if (t0 < 0) {\r\n      n0 = 0;\r\n    } else {\r\n      t0 *= t0;\r\n      n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\r\n    }\r\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\r\n    if (t1 < 0) {\r\n      n1 = 0;\r\n    } else {\r\n      t1 *= t1;\r\n      n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\r\n    }\r\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\r\n    if (t2 < 0) {\r\n      n2 = 0;\r\n    } else {\r\n      t2 *= t2;\r\n      n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\r\n    }\r\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\r\n    if (t3 < 0) {\r\n      n3 = 0;\r\n    } else {\r\n      t3 *= t3;\r\n      n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\r\n    }\r\n    // Add contributions from each corner to get the final noise value.\r\n    // The result is scaled to return values in the interval [-1,1].\r\n    return 32 * (n0 + n1 + n2 + n3);\r\n  }\r\n\r\n  // ##### Perlin noise stuff\r\n\r\n  private fade(t: number): number {\r\n    return t * t * t * (t * (t * 6 - 15) + 10);\r\n  }\r\n\r\n  private lerp(a: number, b: number, t: number): number {\r\n    return (1 - t) * a + t * b;\r\n  }\r\n\r\n  private calculatePeakInfluence(x: number, y: number, peakPoint: PeakPoint): number {\r\n    const dx = x - peakPoint.x;\r\n    const dy = y - peakPoint.y;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (distance >= peakPoint.falloffRadius) {\r\n      return 0;\r\n    }\r\n\r\n    // Smooth falloff using cosine\r\n    const falloff = 0.5 * (1 + Math.cos(Math.PI * distance / peakPoint.falloffRadius));\r\n    return peakPoint.intensity * falloff;\r\n  }\r\n\r\n  perlin2(x: number, y: number): number {\r\n    let X = Math.floor(x),\r\n      Y = Math.floor(y);\r\n    // Get relative xy coordinates of point within that cell\r\n    x = x - X;\r\n    y = y - Y;\r\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n    X = X & 255;\r\n    Y = Y & 255;\r\n\r\n    // Calculate noise contributions from each of the four corners\r\n    const n00 = this.gradP[X + this.perm[Y]].dot2(x, y);\r\n    const n01 = this.gradP[X + this.perm[Y + 1]].dot2(x, y - 1);\r\n    const n10 = this.gradP[X + 1 + this.perm[Y]].dot2(x - 1, y);\r\n    const n11 = this.gradP[X + 1 + this.perm[Y + 1]].dot2(x - 1, y - 1);\r\n\r\n    // Compute the fade curve value for x\r\n    const u = this.fade(x);\r\n    const perlinValue = this.lerp(\r\n      this.lerp(n00, n10, u),\r\n      this.lerp(n01, n11, u),\r\n      this.fade(y)\r\n    );\r\n\r\n    // Add influence from all peak points\r\n    let peakInfluence = 0;\r\n    for (const peak of this.peakPoints) {\r\n      peakInfluence += this.calculatePeakInfluence(x + X, y + Y, peak);\r\n    }\r\n\r\n    // Combine Perlin noise with peak influence\r\n    return Math.min(1, Math.max(-1, perlinValue + peakInfluence));\r\n\r\n    // // Interpolate the four results\r\n    // return this.lerp(this.lerp(n00, n10, u), this.lerp(n01, n11, u), this.fade(y));\r\n  }\r\n\r\n  // Add a new peak point\r\n  addPeakPoint(x: number, y: number, intensity: number, falloffRadius: number) {\r\n    this.peakPoints.push({ x, y, intensity, falloffRadius });\r\n    console.log(this.peakPoints);\r\n  }\r\n\r\n  // Clear all peak points\r\n  clearPeakPoints() {\r\n    this.peakPoints = [];\r\n  }\r\n\r\n  // perlin3(x: number, y: number, z: number): number {\r\n  //   // Find unit grid cell containing point\r\n  //   let X = Math.floor(x),\r\n  //     Y = Math.floor(y),\r\n  //     Z = Math.floor(z);\r\n  //   // Get relative xyz coordinates of point within that cell\r\n  //   x = x - X;\r\n  //   y = y - Y;\r\n  //   z = z - Z;\r\n  //   // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n  //   X = X & 255;\r\n  //   Y = Y & 255;\r\n  //   Z = Z & 255;\r\n\r\n  //   // Calculate noise contributions from each of the eight corners\r\n  //   const n000 = this.gradP[X + this.perm[Y + this.perm[Z]]].dot3(x, y, z);\r\n  //   const n001 = this.gradP[X + this.perm[Y + this.perm[Z + 1]]].dot3(x, y, z - 1);\r\n  //   const n010 = this.gradP[X + this.perm[Y + 1 + this.perm[Z]]].dot3(x, y - 1, z);\r\n  //   const n011 = this.gradP[X + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x, y - 1, z - 1);\r\n  //   const n100 = this.gradP[X + 1 + this.perm[Y + this.perm[Z]]].dot3(x - 1, y, z);\r\n  //   const n101 = this.gradP[X + 1 + this.perm[Y + this.perm[Z + 1]]].dot3(x - 1, y, z - 1);\r\n  //   const n110 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z]]].dot3(x - 1, y - 1, z);\r\n  //   const n111 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x - 1, y - 1, z - 1);\r\n\r\n  //   // Compute the fade curve value for x, y, z\r\n  //   const u = this.fade(x);\r\n  //   const v = this.fade(y);\r\n  //   const w = this.fade(z);\r\n\r\n  //   // Interpolate\r\n  //   return this.lerp(\r\n  //     this.lerp(this.lerp(n000, n100, u), this.lerp(n001, n101, u), w),\r\n  //     this.lerp(this.lerp(n010, n110, u), this.lerp(n011, n111, u), w),\r\n  //     v\r\n  //   );\r\n  // }\r\n}\r\n\r\nexport default Perlin;","import { ProceduralFreeRoam } from \"../scenes/Procedural-FreeRoam\";\r\nimport Player from \"./Player\";\r\n\r\nclass ghostPlayer {\r\n\r\n    debug = false;\r\n\r\n    baseVelocityX = 15;\r\n    baseVelocityY = 15;\r\n\r\n    currVelocityX = 0;\r\n    currVelocityY = 0;\r\n\r\n    limitX = 10;\r\n    limitY = 10;\r\n\r\n    x: number;\r\n    y: number;\r\n    angle: number = 0;\r\n    parentScene: ProceduralFreeRoam;\r\n    parentPlayer: Player;\r\n    followPlayer = false;\r\n    radius = 500;\r\n\r\n    graphics: Phaser.GameObjects.Graphics | undefined = undefined;\r\n    ghostCircle: Phaser.GameObjects.Graphics | undefined = undefined;\r\n\r\n    constructor(\r\n        parentScene: ProceduralFreeRoam,\r\n        parentPlayer: Player,\r\n    ) {\r\n        this.parentScene = parentScene;\r\n        this.parentPlayer = parentPlayer;\r\n        this.x = parentPlayer.x;\r\n        this.y = parentPlayer.y;\r\n        parentScene.cameras.main.startFollow(this, true, .1, .1, 1, 1)\r\n\r\n        if (this.debug) {\r\n            this.graphics = parentScene.add.graphics();\r\n            this.ghostCircle = parentScene.add.graphics();\r\n        }\r\n\r\n    }\r\n\r\n    private getAngle(): void {\r\n        const dx = this.parentPlayer.x - this.x;\r\n        const dy = this.parentPlayer.y - this.y;\r\n        this.angle = Math.atan2(dy, dx);\r\n    }\r\n\r\n    private getDistance(): number {\r\n        const dx = this.parentPlayer.x - this.x;\r\n        const dy = this.parentPlayer.y - this.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n\r\n    update(): void {\r\n        const distance = this.getDistance();\r\n\r\n        const playerX = this.parentPlayer.x;\r\n        const playerY = this.parentPlayer.y;\r\n\r\n        const followAreaLeft = this.x - this.limitX;\r\n        const followAreaRight = this.x + this.limitX;\r\n        const followAreaTop = this.y - this.limitY;\r\n        const followAreaBottom = this.y + this.limitY;\r\n\r\n        if ((!this.followPlayer && (playerX < followAreaLeft || playerX > followAreaRight || playerY < followAreaTop || playerY > followAreaBottom)) || this.parentPlayer.currSpeed === 0) {\r\n            this.followPlayer = true;\r\n        }\r\n        if (this.followPlayer && distance <= 5) {\r\n            this.followPlayer = false;\r\n        }\r\n\r\n        if (this.followPlayer) {\r\n            this.getAngle();\r\n            let factor = (distance) / this.radius * 1.2;\r\n            this.currVelocityX = this.baseVelocityX * factor;\r\n            this.currVelocityY = this.baseVelocityY * factor\r\n            if (this.parentScene.checkActive) {\r\n                this.currVelocityX *= this.parentPlayer.cheatFactor;\r\n                this.currVelocityY *= this.parentPlayer.cheatFactor;\r\n            }\r\n            this.x += this.currVelocityX * Math.cos(this.angle);\r\n            this.y += this.currVelocityY * Math.sin(this.angle);\r\n        }\r\n\r\n        if (this.debug && this.graphics && this.ghostCircle) {\r\n            this.graphics.clear();\r\n            this.graphics.lineStyle(2, 0x00ff00, 1);\r\n            this.graphics.strokeRect(followAreaLeft, followAreaTop, 2 * this.limitX, 2 * this.limitY);\r\n\r\n\r\n            this.ghostCircle.clear();\r\n            this.ghostCircle.lineStyle(2, 0xff0000, 1);\r\n            this.ghostCircle.strokeCircle(this.x, this.y, 50);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default ghostPlayer;\r\n","import { Physics } from \"phaser\";\r\nimport { config } from \"../config/config\";\r\nimport { Animations } from \"../types\";\r\nimport ghostPlayer from \"./ghostPlayer\";\r\nimport { ProceduralFreeRoam } from \"../scenes/Procedural-FreeRoam\";\r\n\r\nconst animations: Animations = {\r\n\tup: {\r\n\t\tstartFrame: 0,\r\n\t\tendFrame: 15,\r\n\t},\r\n\tdown: {\r\n\t\tstartFrame: 64,\r\n\t\tendFrame: 79,\r\n\t},\r\n\tright: {\r\n\t\tstartFrame: 32,\r\n\t\tendFrame: 47,\r\n\t},\r\n\tidle: {\r\n\t\tstartFrame: 48,\r\n\t\tendFrame: 63,\r\n\t},\r\n\tleft: {\r\n\t\tstartFrame: 16,\r\n\t\tendFrame: 31,\r\n\t},\r\n};\r\n\r\nclass Player extends Physics.Arcade.Sprite {\r\n\tcursor: Phaser.Types.Input.Keyboard.CursorKeys | undefined = undefined;\r\n\twKey: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n\taKey: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n\tsKey: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n\tdKey: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n\tshiftKey: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n\r\n\tvelocity = config.player.velocity;\r\n\r\n\tparentScene: ProceduralFreeRoam;\r\n\tghostPlayer: ghostPlayer;\r\n\r\n\tcurrSpeed = 0;\r\n\tcheatFactor = 2;\r\n\r\n\tchangeCharacter = (characterURL: string) => {\r\n\t\tthis.setTexture(characterURL);\r\n\t\tthis.setupAnimations();\r\n\t};\r\n\r\n\tconstructor(\r\n\t\tparentScene: ProceduralFreeRoam, // scene\r\n\t\tx: number, // x position\r\n\t\ty: number, // y position\r\n\t\ttexture: string,\r\n\t\tcursor?: Phaser.Types.Input.Keyboard.CursorKeys,\r\n\t\tframe?: string | number\r\n\t) {\r\n\t\tsuper(parentScene, x, y, texture, frame);\r\n\r\n\t\tthis.parentScene = parentScene;\r\n\r\n\t\tthis.scale = window.innerHeight / (config.player.frameWidth * 10);\r\n\r\n\t\tthis.cursor = cursor;\r\n\r\n\t\tthis.setUpKeys(); // set up WASD keys\r\n\r\n\t\t// place the player at the center of the screen\r\n\t\tthis.setOrigin(0.5, 0.5);\r\n\r\n\t\t// add camera follow where the player is at the center of the camera\r\n\t\t// parentScene.cameras.main.startFollow(this, true, 1,1);\r\n\r\n\t\tparentScene.physics.add.existing(this);\r\n\t\tthis.body!.setSize(this.body!.width * 0.5, this.body!.height, true);\r\n\t\tthis.body!.setOffset(this.body!.offset.x, this.body!.offset.y + 26);\r\n\t\tthis.setScale(0.2)\r\n\t\tparentScene.add.existing(this).setDepth(5);\r\n\r\n\r\n\t\t// this.setupAnimations();\r\n\t\tthis.ghostPlayer = new ghostPlayer(this.parentScene, this)\r\n\t\t// this.setCollideWorldBounds(true);\r\n\t}\r\n\t\r\n\tprivate setUpKeys() {\r\n\t\tthis.wKey = this.parentScene.input.keyboard!.addKey(\r\n\t\t\tPhaser.Input.Keyboard.KeyCodes.W\r\n\t\t);\r\n\t\tthis.aKey = this.parentScene.input.keyboard!.addKey(\r\n\t\t\tPhaser.Input.Keyboard.KeyCodes.A\r\n\t\t);\r\n\t\tthis.sKey = this.parentScene.input.keyboard!.addKey(\r\n\t\t\tPhaser.Input.Keyboard.KeyCodes.S\r\n\t\t);\r\n\t\tthis.dKey = this.parentScene.input.keyboard!.addKey(\r\n\t\t\tPhaser.Input.Keyboard.KeyCodes.D\r\n\t\t);\r\n\t\tthis.shiftKey = this.parentScene.input.keyboard!.addKey(\r\n\t\t\tPhaser.Input.Keyboard.KeyCodes.SHIFT\r\n\t\t);\r\n\t}\r\n\r\n\tprivate setupAnimations() {\r\n\t\tObject.keys(animations).forEach((key) => {\r\n\t\t\tconst animation = animations[key];\r\n\t\t\tthis.anims.remove(key);\r\n\t\t\tthis.anims.create({\r\n\t\t\t\tkey: key,\r\n\t\t\t\tframes: this.anims.generateFrameNumbers(\r\n\t\t\t\t\tthis.parentScene.characterURL,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstart: animation.startFrame,\r\n\t\t\t\t\t\tend: animation.endFrame,\r\n\t\t\t\t\t}\r\n\t\t\t\t),\r\n\t\t\t\tframeRate: config.player.frameRate,\r\n\t\t\t\trepeat: -1,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate idle() {\r\n\t\tthis.currSpeed = 0;\r\n\t\tthis.setVelocityX(0);\r\n\t\tthis.setVelocityY(0);\r\n\t\tthis.anims.play(\"idle\", true);\r\n\t}\r\n\r\n\tprivate moveUp(factor: number) {\r\n\t\tthis.currSpeed = this.velocity * -factor\r\n\t\tthis.setVelocityY(-factor * this.velocity);\r\n\t\tthis.setVelocityX(0);\r\n\t\tthis.anims.play(\"up\", true);\r\n\t}\r\n\r\n\tprivate moveRight(factor: number) {\r\n\t\tthis.currSpeed = this.velocity * factor\r\n\t\tthis.setVelocityX(factor * this.velocity);\r\n\t\tthis.setVelocityY(0);\r\n\t\tthis.anims.play(\"right\", true);\r\n\t}\r\n\r\n\tprivate moveDown(factor: number) {\r\n\t\tthis.currSpeed = this.velocity * factor\r\n\t\tthis.setVelocityY(factor * this.velocity);\r\n\t\tthis.setVelocityX(0);\r\n\t\tthis.anims.play(\"down\", true);\r\n\t}\r\n\r\n\tprivate moveLeft(factor: number) {\r\n\t\tthis.currSpeed = this.velocity * -factor\r\n\t\tthis.setVelocityX(-factor * this.velocity);\r\n\t\tthis.setVelocityY(0);\r\n\t\tthis.anims.play(\"left\", true);\r\n\t}\r\n\r\n\r\n\tupdate() {\r\n\t\t// console.log(\"player x: \", this.x, \"player y: \", this.y)\r\n\t\tif (!this.cursor) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.cheatFactor = 2;\r\n\r\n\t\tif (this.cursor.up.isDown || this.wKey?.isDown) {\r\n\t\t\tif (this.shiftKey?.isDown && this.parentScene.checkActive) {\r\n\t\t\t\tthis.moveUp(this.cheatFactor);\r\n\t\t\t} else {\r\n\t\t\t\tthis.moveUp(1);\r\n\t\t\t}\r\n\t\t} else if (this.cursor.right.isDown || this.dKey?.isDown) {\r\n\t\t\tif (this.shiftKey?.isDown && this.parentScene.checkActive) {\r\n\t\t\t\tthis.moveRight(this.cheatFactor);\r\n\t\t\t} else {\r\n\t\t\t\tthis.moveRight(1);\r\n\t\t\t}\r\n\t\t} else if (this.cursor.down.isDown || this.sKey?.isDown) {\r\n\t\t\tif (this.shiftKey?.isDown && this.parentScene.checkActive) {\r\n\t\t\t\tthis.moveDown(this.cheatFactor);\r\n\t\t\t} else {\r\n\t\t\t\tthis.moveDown(1);\r\n\t\t\t}\r\n\t\t} else if (this.cursor.left.isDown || this.aKey?.isDown) {\r\n\t\t\tif (this.shiftKey?.isDown && this.parentScene.checkActive) {\r\n\t\t\t\tthis.moveLeft(this.cheatFactor);\r\n\t\t\t} else {\r\n\t\t\t\tthis.moveLeft(1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.idle();\r\n\t\t}\r\n\t\tif (this.parentScene.joystick) {\r\n\t\t\tconst forceX = this.parentScene.joystick.forceX;\r\n\t\t\tconst forceY = this.parentScene.joystick.forceY;\r\n\t\r\n\t\t\tif (Math.abs(forceX) > 0.1 || Math.abs(forceY) > 0.1) {\r\n\t\t\t\tif (Math.abs(forceX) > Math.abs(forceY)) {\r\n\t\t\t\t\tif (forceX > 0) this.moveRight(1);\r\n\t\t\t\t\telse this.moveLeft(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (forceY > 0) this.moveDown(1);\r\n\t\t\t\t\telse this.moveUp(1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.idle();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.ghostPlayer) {\r\n\t\t\tthis.ghostPlayer.update();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Player;\r\n","import { GameObjects } from \"phaser\";\r\nimport { config } from \"../config/config\"; \r\nimport { regionNameToString } from \"../utils/helpers\";\r\nimport { ProceduralFreeRoam } from \"../scenes/Procedural-FreeRoam\";\r\n\r\nclass Dungeon extends GameObjects.Image {\r\n\r\n    parentScene: ProceduralFreeRoam;\r\n    canEnter: boolean;\r\n    dungeonIndex: number;\r\n    diasbled: Boolean;\r\n\r\n    constructor(parentScene: ProceduralFreeRoam, x: number, y: number, dungeonIndex: number, disabled: Boolean = false) {\r\n        super(\r\n            parentScene,\r\n            x+parentScene.tileSize,\r\n            y,\r\n            config.openDungeon.key\r\n        );\r\n        this.setVisible(false);\r\n        parentScene.add.existing(this);\r\n        this.parentScene = parentScene;\r\n        this.setDepth(10);\r\n        this.setScale(0.4);\r\n        this.canEnter = false;\r\n        this.dungeonIndex = dungeonIndex;\r\n        this.diasbled = disabled;\r\n    }\r\n\r\n    checkIfPlayerIsNear(): boolean {\r\n        if (!this.parentScene.player || this.diasbled) {\r\n            return false;\r\n        }\r\n        return (\r\n            Math.abs(this.parentScene.player.x - this.x) < 100 &&\r\n            Math.abs(this.parentScene.player.y - this.y) < 100\r\n        );\r\n    }\r\n\r\n    update(): void {\r\n        if (!this.diasbled) {\r\n            const isNear = this.checkIfPlayerIsNear();\r\n            if (isNear && !this.canEnter) {\r\n                console.log(\"Player is near dungeon\", this.dungeonIndex);\r\n                this.setVisible(true);\r\n            }\r\n            if (!isNear && this.canEnter && this.visible) {\r\n                this.setVisible(false);\r\n            }\r\n\r\n            this.canEnter = isNear;\r\n\r\n            if (this.canEnter && this.parentScene.input.keyboard!.checkDown(this.parentScene.ekey!, 250)) {\r\n                console.log(\"Entering dungeon\", this.dungeonIndex); \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Dungeon;","import { RegionType, RegionName, LootboxDetails } from \"../types.d\";\r\n\r\nconst centralRegion: RegionType = {\r\n\tname: RegionName.CENTRAL,\r\n\tasset: {\r\n\t\ttileset: {\r\n\t\t\tkey: \"CENTRAL_TILESET\",\r\n\t\t\turl: \"/assets/phaser/maps/central/tileset.webp\",\r\n\t\t},\r\n\t\tmap: {\r\n\t\t\tkey: \"CENTRAL_MAP\",\r\n\t\t\turl: \"/assets/phaser/maps/central/map.json\",\r\n\t\t},\r\n\t\toverlay: {\r\n\t\t\tkey: \"CENTRAL_OVERLAY\",\r\n\t\t\turl: \"/assets/phaser/maps/central/overlay.webp\",\r\n\t\t},\r\n\t\tglitchTiles: {\r\n\t\t\tkey: \"GLITCH_OVERLAY\",\r\n\t\t\turl: \"/assets/phaser/maps/central/glitch-tiles.webp\",\r\n\t\t},\r\n\t\tglitchMap: {\r\n\t\t\tkey: \"GLITCH_MAP\",\r\n\t\t\turl: \"/assets/phaser/maps/central/glitch-overlay.json\",\r\n\t\t}\r\n\t},\r\n\tspawnPoint: {\r\n\t\tx: 42,\r\n\t\ty: 43,\r\n\t},\r\n\tTeleporter: {\r\n\t\tportal: {\r\n\t\t\ttileset: {\r\n\t\t\t\tkey: \"CENTRAL_PORTAL_TILESET\",\r\n\t\t\t\turl: \"/assets/phaser/maps/central/portal.webp\",\r\n\t\t\t},\r\n\t\t\tmap: {\r\n\t\t\t\tkey: \"CENTRAL_PORTAL_MAP\",\r\n\t\t\t\turl: \"/assets/phaser/maps/central/portal.json\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tanchorPoint: {\r\n\t\t\tx: 42,\r\n\t\t\ty: 42,\r\n\t\t},\r\n\t\tstaticAnim: false,\r\n\t\teffectMap: {\r\n\t\t\tkey: \"CENTRAL_EFFECT_MAP\",\r\n\t\t\turl: \"/assets/phaser/maps/central/effects.json\",\r\n\t\t},\r\n\t},\r\n\tlootboxesDetails: [],\r\n\tInteractives: [{\r\n\t\tname: \"MARKET\",\r\n\t\timage: {\r\n\t\t\turl: \"/assets/phaser/objects/open-market.webp\",\r\n\t\t\tkey: \"open-market\",\r\n\t\t},\r\n\t\tevent: \" \",\r\n\t\tcoordinates: {\r\n\t\t\tx: -19,\r\n\t\t\ty: -20,\r\n\t\t}\r\n\t}, {\r\n\t\tname: \"LEADERBOARD\",\r\n\t\timage: {\r\n\t\t\turl: \"/assets/phaser/objects/open-leaderboard.webp\",\r\n\t\t\tkey: \"open-leader\",\r\n\t\t},event: \" \",\r\n\t\tcoordinates: {\r\n\t\t\tx: 6,\r\n\t\t\ty: -26,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"ARENA\",\r\n\t\timage: {\r\n\t\t\turl: \"/assets/phaser/objects/start-match.webp\",\r\n\t\t\tkey: \"start-match\",\r\n\t\t},\r\n\t\tevent: \" \",\r\n\t\tcoordinates: {\r\n\t\t\tx: 18,\r\n\t\t\ty: 13,\r\n\t\t}\r\n\t}]\r\n};\r\nconst maps = {\r\n\t[RegionName.CENTRAL]: centralRegion,\r\n};\r\n\r\nexport {\r\n\tcentralRegion,\r\n\tmaps,\r\n};\r\n","const Key = Phaser.Input.Keyboard.Key;\r\nconst KeyCodes = Phaser.Input.Keyboard.KeyCodes;\r\nconst KeyNames = ['up', 'down', 'left', 'right'];\r\n\r\nclass CursorKeys {\r\n    constructor(scene) {\r\n        // scene: scene instance, or undefined\r\n        this.scene = scene;\r\n\r\n        this.keys = {};\r\n        this.cursorKeys = {};\r\n        this.noKeyDown = true;\r\n\r\n        for (var i = 0, cnt = KeyNames.length; i < cnt; i++) {\r\n            var keyName = KeyNames[i];\r\n            this.addKey(keyName);\r\n            this.cursorKeys[keyName] = this.keys[keyName];\r\n        }\r\n\r\n    }\r\n\r\n    shutdown(fromScene) {\r\n        this.scene = undefined;\r\n        for (var key in this.keys) {\r\n            this.keys[key].destroy();\r\n        }\r\n        this.keys = undefined;\r\n        this.cursorKeys = undefined;\r\n    }\r\n\r\n    destroy(fromScene) {\r\n        shutdown(fromScene);\r\n    }\r\n\r\n    createCursorKeys() {\r\n        return this.cursorKeys;\r\n    }\r\n\r\n    setKeyState(keyName, isDown) {\r\n        var key = this.keys[keyName];\r\n\r\n        if (!key.enabled) {\r\n            return this;\r\n        }\r\n        if (isDown) {\r\n            this.noKeyDown = false;\r\n        }\r\n\r\n        if (key.isDown !== isDown) {\r\n            FakeEvent.timeStamp = Date.now();\r\n            FakeEvent.keyCode = key.keyCode;\r\n            if (isDown) {\r\n                key.onDown(FakeEvent);\r\n            } else {\r\n                key.onUp(FakeEvent);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clearAllKeysState() {\r\n        this.noKeyDown = true;\r\n        for (var keyName in this.keys) {\r\n            this.setKeyState(keyName, false);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getKeyState(keyName) {\r\n        return this.keys[keyName];\r\n    }\r\n\r\n    get upKeyDown() {\r\n        return this.keys.up.isDown;\r\n    }\r\n\r\n    get downKeyDown() {\r\n        return this.keys.down.isDown;\r\n    }\r\n\r\n    get leftKeyDown() {\r\n        return this.keys.left.isDown;\r\n    }\r\n\r\n    get rightKeyDown() {\r\n        return this.keys.right.isDown;\r\n    }\r\n\r\n    get anyKeyDown() {\r\n        return !this.noKeyDown;\r\n    }\r\n\r\n    addKey(keyName, keyCode) {\r\n        if (keyCode === undefined) {\r\n            keyCode = keyName;\r\n        }\r\n\r\n        if (typeof (keyCode) === 'string') {\r\n            keyCode = keyCode.toUpperCase();\r\n            if (KeyCodes.hasOwnProperty(keyCode)) {\r\n                keyCode = KeyCodes[keyCode];\r\n            }\r\n        }\r\n\r\n        this.keys[keyName] = new Key(this.scene, keyCode);\r\n        return this;\r\n    }\r\n\r\n    addKeys(keyNames) {\r\n        for (var i = 0, cnt = keyNames.length; i < cnt; i++) {\r\n            this.addKey(keyNames[i]);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nvar FakeEvent = {\r\n    timeStamp: 0,\r\n    keyCode: 0,\r\n    altKey: false,\r\n    ctrlKey: false,\r\n    shiftKey: false,\r\n    metaKey: false,\r\n    location: 0,\r\n};\r\n\r\nexport default CursorKeys;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar RAD_TO_DEG = 180 / Math.PI;\r\n\r\n/**\r\n * Convert the given angle in radians, to the equivalent angle in degrees.\r\n *\r\n * @function Phaser.Math.RadToDeg\r\n * @since 3.0.0\r\n *\r\n * @param {number} radians - The angle in radians to convert ot degrees.\r\n *\r\n * @return {integer} The given angle converted to degrees.\r\n */\r\nvar RadToDeg = function (radians)\r\n{\r\n    return radians * RAD_TO_DEG;\r\n};\r\n\r\nexport default RadToDeg;\r\n","export default {\r\n    'up&down': 0,\r\n    'left&right': 1,\r\n    '4dir': 2,\r\n    '8dir': 3\r\n};","var AngleToDirections = function (angle, dirMode, out) {\r\n    if (out === undefined) {\r\n        out = {}\r\n    } else if (out === true) {\r\n        out = globOut;\r\n    }\r\n\r\n    out.left = false;\r\n    out.right = false;\r\n    out.up = false;\r\n    out.down = false;\r\n\r\n    angle = (angle + 360) % 360;\r\n    switch (dirMode) {\r\n        case 0: // up & down\r\n            if (angle < 180) {\r\n                out.down = true;\r\n            } else {\r\n                out.up = true;\r\n            }\r\n            break;\r\n\r\n        case 1: // left & right\r\n            if ((angle > 90) && (angle <= 270)) {\r\n                out.left = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n\r\n        case 2: // 4 dir\r\n            if ((angle > 45) && (angle <= 135)) {\r\n                out.down = true;\r\n            } else if ((angle > 135) && (angle <= 225)) {\r\n                out.left = true;\r\n            } else if ((angle > 225) && (angle <= 315)) {\r\n                out.up = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n\r\n        case 3: // 8 dir\r\n            if ((angle > 22.5) && (angle <= 67.5)) {\r\n                out.down = true;\r\n                out.right = true;\r\n            } else if ((angle > 67.5) && (angle <= 112.5)) {\r\n                out.down = true;\r\n            } else if ((angle > 112.5) && (angle <= 157.5)) {\r\n                out.down = true;\r\n                out.left = true;\r\n            } else if ((angle > 157.5) && (angle <= 202.5)) {\r\n                out.left = true;\r\n            } else if ((angle > 202.5) && (angle <= 247.5)) {\r\n                out.left = true;\r\n                out.up = true;\r\n            } else if ((angle > 247.5) && (angle <= 292.5)) {\r\n                out.up = true;\r\n            } else if ((angle > 292.5) && (angle <= 337.5)) {\r\n                out.up = true;\r\n                out.right = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar globOut = {};\r\n\r\nexport default AngleToDirections;","import CursorKeys from './CursorKeys.js';\r\nimport RadToDeg from '../math/RadToDeg.js';\r\nimport DIRMODE from '../math/angle/angletodirections/Const.js';\r\nimport AngleToDirections from '../math/angle/angletodirections/AngleToDirections.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst GetDist = Phaser.Math.Distance.Between;\r\nconst GetAngle = Phaser.Math.Angle.Between;\r\n\r\nclass VectorToCursorKeys extends CursorKeys {\r\n    constructor(scene, config) {\r\n        super(scene);\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) {\r\n        if (this.start == undefined) {\r\n            this.start = { x: 0, y: 0 };\r\n        }\r\n        if (this.end == undefined) {\r\n            this.end = { x: 0, y: 0 };\r\n        }\r\n        this._enable = undefined;\r\n        this.setEnable(GetValue(o, 'enable', true));\r\n        this.setMode(GetValue(o, 'dir', '8dir'));\r\n        this.setDistanceThreshold(GetValue(o, 'forceMin', 16));\r\n\r\n        var startX = GetValue(o, \"start.x\", null);\r\n        var startY = GetValue(o, \"start.y\", null);\r\n        var endX = GetValue(o, \"end.x\", null);\r\n        var endY = GetValue(o, \"end.y\", null);\r\n        this.setVector(startX, startY, endX, endY);\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            enable: this.enable,\r\n            dir: this.dirMode,\r\n            forceMin: this.forceMin,\r\n\r\n            start: {\r\n                x: this.start.x,\r\n                y: this.start.y\r\n            },\r\n            end: {\r\n                x: this.end.x,\r\n                y: this.end.y\r\n            }\r\n        };\r\n    }\r\n\r\n    setMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = DIRMODE[m];\r\n        }\r\n        this.dirMode = m;\r\n        return this;\r\n    }\r\n\r\n    get enable() {\r\n        return this._enable;\r\n    }\r\n\r\n    set enable(e) {\r\n        if (this._enable === e) {\r\n            return;\r\n        }\r\n        if (!e) {\r\n            this.clearVector();\r\n        }\r\n        this._enable = e;\r\n        return this;\r\n    }\r\n\r\n    setEnable(e) {\r\n        if (e === undefined) {\r\n            e = true;\r\n        }\r\n\r\n        this.enable = e;\r\n        return this;\r\n    }\r\n\r\n    toggleEnable() {\r\n        this.setEnable(!this.enable);\r\n        return this;\r\n    }\r\n\r\n    setDistanceThreshold(d) {\r\n        if (d < 0) {\r\n            d = 0;\r\n        }\r\n        this.forceMin = d;\r\n        return this;\r\n    }\r\n\r\n    clearVector() {\r\n        this.start.x = 0;\r\n        this.start.y = 0;\r\n        this.end.x = 0;\r\n        this.end.y = 0;\r\n        this.clearAllKeysState();\r\n        return this;\r\n    }\r\n\r\n    setVector(x0, y0, x1, y1) {\r\n        if (!this.enable) {\r\n            // Do nothing\r\n            return this;\r\n        }\r\n\r\n        if (x0 === null) {\r\n            // Clear all keys' state\r\n            this.clearVector();\r\n            return this;\r\n        }\r\n\r\n        // (0,0) -> (x0, y0)\r\n        if (x1 === undefined) {\r\n            x1 = x0;\r\n            x0 = 0;\r\n            y1 = y0;\r\n            y0 = 0;\r\n        }\r\n\r\n        this.start.x = x0;\r\n        this.start.y = y0;\r\n        this.end.x = x1;\r\n        this.end.y = y1;\r\n\r\n        if ((this.forceMin > 0) && (this.force < this.forceMin)) {\r\n            // No key pressed\r\n            this.clearVector();\r\n            return this;\r\n        }\r\n\r\n        // Update keys' state\r\n        this.noKeyDown = true;\r\n        var dirStates = AngleToDirections(this.angle, this.dirMode, true);\r\n        for (var dir in dirStates) {\r\n            this.setKeyState(dir, dirStates[dir]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    get forceX() {\r\n        return this.end.x - this.start.x;\r\n    }\r\n\r\n    get forceY() {\r\n        return this.end.y - this.start.y;\r\n    }\r\n\r\n    get force() {\r\n        return GetDist(this.start.x, this.start.y, this.end.x, this.end.y);\r\n    }\r\n\r\n    get rotation() {\r\n        return GetAngle(this.start.x, this.start.y, this.end.x, this.end.y);\r\n    }\r\n\r\n    get angle() {\r\n        return RadToDeg(this.rotation); // -180 ~ 180\r\n    }\r\n\r\n    get octant() {\r\n        var octant = 0;\r\n        if (this.rightKeyDown) {\r\n            octant = (this.downKeyDown) ? 45 : 0;\r\n        } else if (this.downKeyDown) {\r\n            octant = (this.leftKeyDown) ? 135 : 90;\r\n        } else if (this.leftKeyDown) {\r\n            octant = (this.upKeyDown) ? 225 : 180;\r\n        } else if (this.upKeyDown) {\r\n            octant = (this.rightKeyDown) ? 315 : 270;\r\n        }\r\n        return octant;\r\n    }\r\n}\r\n\r\nexport default VectorToCursorKeys;","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === true) || (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on() {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once() {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off() {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit(event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener() {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener() {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners() {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount() {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners() {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    },\r\n\r\n    eventNames() {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.eventNames.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    },\r\n};","var GetPointerWorldXY = function (pointer, targetCamera, out) {\r\n    var camera = pointer.camera;\r\n    if (!camera) {\r\n        return null;\r\n    }\r\n\r\n    if (out === undefined) {\r\n        out = {};\r\n    } else if (out === true) {\r\n        out = globalOut;\r\n    }\r\n\r\n    if (camera === targetCamera) {\r\n        out.x = pointer.worldX;\r\n        out.y = pointer.worldY;\r\n    } else {\r\n        camera.getWorldPoint(pointer.x, pointer.y, out);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nvar globalOut = {};\r\n\r\nexport default GetPointerWorldXY;","import VectorToCursorKeys from '../../utils/input/VectorToCursorKeys.js';\r\nimport EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetPointerWorldXY from '../../utils/input/GetPointerWorldXY.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst CircleClass = Phaser.Geom.Circle;\r\nconst CircleContains = Phaser.Geom.Circle.Contains;\r\n\r\nclass TouchCursor extends VectorToCursorKeys {\r\n    constructor(gameObject, config) {\r\n        var scene = gameObject.scene;\r\n        super(scene, config);\r\n        //this.resetFromJSON(config); // this function had been called in super(config)\r\n\r\n        // Event emitter\r\n        var eventEmitter = GetValue(config, 'eventEmitter', undefined);\r\n        var EventEmitterClass = GetValue(config, 'EventEmitterClass', undefined);\r\n        this.setEventEmitter(eventEmitter, EventEmitterClass);\r\n\r\n        this.scene = scene;\r\n        this.mainCamera = scene.sys.cameras.main;\r\n        this.pointer = undefined;\r\n        this.gameObject = gameObject;\r\n        this.radius = GetValue(config, 'radius', 100);\r\n\r\n        gameObject.setInteractive(new CircleClass(gameObject.displayOriginX, gameObject.displayOriginY, this.radius), CircleContains);\r\n\r\n        this.boot();\r\n    }\r\n\r\n    resetFromJSON(o) {\r\n        super.resetFromJSON(o);\r\n        this.pointer = undefined;\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        var o = super.toJSON();\r\n        o.radius = this.radius;\r\n\r\n        return o;\r\n    }\r\n\r\n    boot() {\r\n        this.gameObject.on('pointerdown', this.onKeyDownStart, this);\r\n        this.gameObject.on('pointerover', this.onKeyDownStart, this);\r\n\r\n        this.scene.input.on('pointermove', this.onKeyDown, this);\r\n        this.scene.input.on('pointerup', this.onKeyUp, this);\r\n\r\n        this.gameObject.once('destroy', this.onParentDestroy, this);\r\n    }\r\n\r\n    shutdown(fromScene) {\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n\r\n        // gameObject events will be removed when this gameObject destroyed \r\n        // this.gameObject.off('pointerdown', this.onKeyDownStart, this);\r\n        // this.gameObject.off('pointerover', this.onKeyDownStart, this);\r\n\r\n        this.scene.input.off('pointermove', this.onKeyDown, this);\r\n        this.scene.input.off('pointerup', this.onKeyUp, this);\r\n\r\n        this.destroyEventEmitter();\r\n\r\n        this.scene = undefined;\r\n        this.mainCamera = undefined;\r\n        this.pointer = undefined;\r\n        this.gameObject = undefined;\r\n\r\n        super.shutdown();\r\n    }\r\n\r\n    get enable() {\r\n        return this._enable;\r\n    }\r\n\r\n    // Override setter of enable\r\n    set enable(e) {\r\n        if (this._enable === e) {\r\n            return;\r\n        }\r\n        if (!e) {\r\n            this.pointer = undefined; // Release pointer\r\n        }\r\n        super.enable = e;\r\n        return this;\r\n    }\r\n\r\n    destroy(fromScene) {\r\n        this.shutdown(fromScene);\r\n    }\r\n\r\n    onParentDestroy(parent, fromScene) {\r\n        this.destroy(fromScene);\r\n    }\r\n\r\n    onKeyDownStart(pointer) {\r\n        if ((!pointer.isDown) ||\r\n            (this.pointer !== undefined)) {\r\n            return;\r\n        }\r\n        this.pointer = pointer;\r\n        this.onKeyDown(pointer);\r\n        this.emit('pointerdown', pointer);\r\n    }\r\n\r\n    onKeyDown(pointer) {\r\n        if (this.pointer !== pointer) {\r\n            return;\r\n        }\r\n\r\n        var worldXY = GetPointerWorldXY(pointer, this.mainCamera, true);\r\n        if (!worldXY) {\r\n            // Pointer is outside of any camera, no worldX/worldY available\r\n            return;\r\n        }\r\n\r\n        // Vector of world position\r\n        var camera = pointer.camera;\r\n        var gameObject = this.gameObject;\r\n        var startX = gameObject.x - (camera.scrollX * (gameObject.scrollFactorX - 1));\r\n        var startY = gameObject.y - (camera.scrollY * (gameObject.scrollFactorY - 1));\r\n\r\n        this.setVector(startX, startY, worldXY.x, worldXY.y);\r\n\r\n        this.end.x = worldXY.x;\r\n        this.end.y = worldXY.y;\r\n\r\n        this.emit('update');\r\n    }\r\n\r\n    onKeyUp(pointer) {\r\n        if (this.pointer !== pointer) {\r\n            return;\r\n        }\r\n        this.pointer = undefined;\r\n        this.clearVector();\r\n        this.emit('update');\r\n        this.emit('pointerup', pointer);\r\n    }\r\n\r\n    forceUpdate() {\r\n        var pointer = this.pointer;\r\n        if (!pointer || !pointer.isDown) {\r\n            return this;\r\n        }\r\n\r\n        this.onKeyDown(pointer);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nObject.assign(\r\n    TouchCursor.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nexport default TouchCursor;","import TouchCursor from '../../touchcursor.js';\r\nimport EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass VirtualJoyStick {\r\n    constructor(scene, config) {\r\n        if (config === undefined) {\r\n            config = {};\r\n        }\r\n\r\n        // Event emitter\r\n        var eventEmitter = GetValue(config, 'eventEmitter', undefined);\r\n        var EventEmitterClass = GetValue(config, 'EventEmitterClass', undefined);\r\n        this.setEventEmitter(eventEmitter, EventEmitterClass);\r\n        config.eventEmitter = this.getEventEmitter();\r\n\r\n        this.scene = scene;\r\n        this.base = undefined;\r\n        this.thumb = undefined;\r\n        this.touchCursor = undefined;\r\n        this.setRadius(GetValue(config, 'radius', 100));\r\n\r\n        this.addBase(GetValue(config, 'base', undefined), config);\r\n        this.addThumb(GetValue(config, 'thumb', undefined));\r\n\r\n        var x = GetValue(config, 'x', 0);\r\n        var y = GetValue(config, 'y', 0);\r\n        this.base.setPosition(x, y);\r\n        this.thumb.setPosition(x, y);\r\n\r\n        if (GetValue(config, 'fixed', true)) {\r\n            this.setScrollFactor(0);\r\n        }\r\n\r\n        this.boot();\r\n    }\r\n\r\n    destroy() {\r\n        this.destroyEventEmitter();\r\n        this.base.destroy(); // Also destroy touchCursor behavior\r\n        this.thumb.destroy();\r\n\r\n        this.scene = undefined;\r\n        this.base = undefined;\r\n        this.thumb = undefined;\r\n        this.touchCursor = undefined;\r\n    }\r\n\r\n    createCursorKeys() {\r\n        return this.touchCursor.createCursorKeys();\r\n    }\r\n\r\n    get forceX() {\r\n        return this.touchCursor.forceX;\r\n    }\r\n\r\n    get forceY() {\r\n        return this.touchCursor.forceY;\r\n    }\r\n\r\n    get force() {\r\n        return this.touchCursor.force;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.touchCursor.rotation;\r\n    }\r\n\r\n    get angle() {\r\n        return this.touchCursor.angle; // -180 ~ 180\r\n    }\r\n\r\n    get up() {\r\n        return this.touchCursor.upKeyDown;\r\n    }\r\n\r\n    get down() {\r\n        return this.touchCursor.downKeyDown;\r\n    }\r\n\r\n    get left() {\r\n        return this.touchCursor.leftKeyDown;\r\n    }\r\n\r\n    get right() {\r\n        return this.touchCursor.rightKeyDown;\r\n    }\r\n\r\n    get noKey() {\r\n        return this.touchCursor.noKeyDown;\r\n    }\r\n\r\n    get pointerX() {\r\n        return this.touchCursor.end.x;\r\n    }\r\n\r\n    get pointerY() {\r\n        return this.touchCursor.end.y;\r\n    }\r\n\r\n    get pointer() {\r\n        return this.touchCursor.pointer;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        if ((this.x === x) && (this.y === y)) {\r\n            return this;\r\n        }\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.forceUpdateThumb();\r\n        return this;\r\n    }\r\n\r\n    set x(value) {\r\n        if (this.x === value) {\r\n            return;\r\n        }\r\n        this.base.x = value;\r\n        this.thumb.x = value;\r\n    }\r\n\r\n    set y(value) {\r\n        if (this.y === value) {\r\n            return;\r\n        }\r\n        this.base.y = value;\r\n        this.thumb.y = value;\r\n    }\r\n\r\n    get x() {\r\n        return this.base.x;\r\n    }\r\n\r\n    get y() {\r\n        return this.base.y;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.visible = visible;\r\n        return this;\r\n    }\r\n\r\n    toggleVisible() {\r\n        this.visible = !this.visible;\r\n        return this;\r\n    }\r\n\r\n    get visible() {\r\n        return this.base.visible;\r\n    }\r\n\r\n    set visible(visible) {\r\n        this.base.visible = visible;\r\n        this.thumb.visible = visible;\r\n        this.enable = visible;\r\n    }\r\n\r\n    get enable() {\r\n        return this.touchCursor.enable;\r\n    }\r\n\r\n    set enable(value) {\r\n        this.touchCursor.setEnable(value);\r\n    }\r\n\r\n    setEnable(e) {\r\n        if (e === undefined) {\r\n            e = true;\r\n        }\r\n        this.enable = e;\r\n        return this;\r\n    }\r\n\r\n    toggleEnable() {\r\n        this.setEnable(!this.enable);\r\n        return this;\r\n    }\r\n\r\n    setRadius(radius) {\r\n        this.radius = radius;\r\n        return this;\r\n    }\r\n\r\n    addBase(gameObject, config) {\r\n        if (this.base) {\r\n            this.base.destroy();\r\n            // Also destroy touchCursor behavior\r\n        }\r\n\r\n        if (gameObject === undefined) {\r\n            gameObject = this.scene.add.circle(0, 0, this.radius)\r\n                .setStrokeStyle(3, 0x0000ff);\r\n        }\r\n\r\n        if (config === undefined) {\r\n            config = {};\r\n        }\r\n        config.eventEmitter = this.getEventEmitter();\r\n        this.touchCursor = new TouchCursor(gameObject, config)\r\n        this.base = gameObject;\r\n        return this;\r\n    }\r\n\r\n    addThumb(gameObject) {\r\n        if (this.thumb) {\r\n            this.thumb.destroy();\r\n        }\r\n\r\n        if (gameObject === undefined) {\r\n            gameObject = this.scene.add.circle(0, 0, 40)\r\n                .setStrokeStyle(3, 0x00ff00);\r\n        }\r\n        this.thumb = gameObject;\r\n        return this;\r\n    }\r\n\r\n    setScrollFactor(scrollFactor) {\r\n        this.base.setScrollFactor(scrollFactor);\r\n        this.thumb.setScrollFactor(scrollFactor);\r\n        return this;\r\n    }\r\n\r\n    boot() {\r\n        this.on('update', this.update, this);\r\n    }\r\n\r\n    // Internal method\r\n    update() {\r\n        var touchCursor = this.touchCursor;\r\n        // Start from (0,0)\r\n        var dx, dy;\r\n        var dirMode = touchCursor.dirMode;\r\n        if (touchCursor.anyKeyDown) {\r\n            if (touchCursor.force > this.radius) { // Exceed radius\r\n                var rad = touchCursor.rotation;\r\n\r\n                // NOT 'up&down'\r\n                dx = (dirMode !== 0) ? Math.cos(rad) * this.radius : 0;\r\n                // NOT 'left&right'\r\n                dy = (dirMode !== 1) ? Math.sin(rad) * this.radius : 0;\r\n            } else {\r\n                // NOT 'up&down'\r\n                dx = (dirMode !== 0) ? touchCursor.forceX : 0;\r\n                // NOT 'left&right'\r\n                dy = (dirMode !== 1) ? touchCursor.forceY : 0;\r\n\r\n            }\r\n        } else {\r\n            dx = 0;\r\n            dy = 0;\r\n        }\r\n\r\n        this.thumb.x = this.base.x + dx;\r\n        this.thumb.y = this.base.y + dy;\r\n        return this;\r\n    }\r\n\r\n    forceUpdateThumb() {\r\n        this.touchCursor.forceUpdate();\r\n        return this;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    VirtualJoyStick.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nexport default VirtualJoyStick;","import { GameObjects } from \"phaser\"; \r\nimport { config } from \"../config/config\";\r\nimport { regionNameToString } from \"../utils/helpers\";\r\nimport { ProceduralFreeRoam } from \"../scenes/Procedural-FreeRoam\";\r\n\r\nclass Arena extends GameObjects.Rectangle {\r\n\tparentScene: ProceduralFreeRoam;\r\n\tstartMatchImage: GameObjects.Image | undefined = undefined;\r\n\tmatchmaking = false;\r\n\tcanMatchmake = true;\r\n\r\n\tconstructor(parentScene: ProceduralFreeRoam, x: number, y: number) {\r\n\t\tsuper(\r\n\t\t\tparentScene,\r\n\t\t\tx,\r\n\t\t\ty\r\n\t\t);\r\n\r\n\t\tthis.parentScene = parentScene;\r\n\t\tthis.scale = 3;\r\n\t\tthis.setDepth(4)\r\n\t\tparentScene.add.existing(this);\r\n\t}\r\n\r\n\tcheckIfPlayerIsNear(): boolean {\r\n\t\tif (!this.parentScene.player) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\tMath.abs(this.parentScene.player.x - this.x) < 100 &&\r\n\t\t\tMath.abs(this.parentScene.player.y - this.y) < 100\r\n\t\t);\r\n\t}\r\n\r\n\tendMatchMaking(): void {\r\n\t\tthis.canMatchmake = true;\r\n\t\tthis.matchmaking = false;\r\n\t\tif (this.startMatchImage) {\r\n\t\t\tthis.startMatchImage.visible = true;\r\n\t\t}\r\n\t}\r\n\r\n\tshowPopup(): void {\r\n\t\tconst imageKey = this.parentScene.sys.game.device.os.desktop ? config.arena.startMatchImage.key : config.arena.startMatchImageMobile.key;\r\n\t\tthis.startMatchImage = this.parentScene.add\r\n\t\t\t.image(this.x, this.y, imageKey)\r\n\t\t\t.setDepth(10)\r\n\t\t\t.setScale(0.3);\r\n\t}\r\n\r\n\ttriggerMatchmake(): void {\r\n\t\tif (this.matchmaking) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.matchmaking = true;\r\n\t\tthis.parentScene.pauseGame();\r\n \r\n\t\tif (this.startMatchImage) {\r\n\t\t\tthis.startMatchImage.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tif (this.matchmaking) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst isNear = this.checkIfPlayerIsNear();\r\n\r\n\t\tif (isNear && !this.canMatchmake) {\r\n\t\t\tthis.showPopup();\r\n\t\t}\r\n\r\n\t\tif (!isNear && this.canMatchmake) {\r\n\t\t\tif (this.startMatchImage) {\r\n\t\t\t\tthis.startMatchImage.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.canMatchmake = isNear;\r\n\r\n\t\tconst checkKey = () => {\r\n\t\t\tif (this.parentScene.sys.game.device.os.desktop && this.parentScene.enterKey) {\r\n\t\t\t\treturn this.parentScene.enterKey.isDown;\r\n\t\t\t} else if(!this.parentScene.sys.game.device.os.desktop && this.parentScene.ekey) {\r\n\t\t\t\treturn this.parentScene.input.keyboard!.checkDown(this.parentScene.ekey, 250);\r\n\t\t\t} else return false\r\n\t\t}\r\n\t\tif (this.canMatchmake && checkKey()) {\r\n\t\t\tthis.triggerMatchmake();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Arena;\r\n","import { GameObjects } from \"phaser\"; \r\nimport { ProceduralFreeRoam } from \"../scenes/Procedural-FreeRoam\";\r\n\r\nclass Interactive extends GameObjects.Image {\r\n\r\n    parentScene: ProceduralFreeRoam;\r\n    canInteract: boolean;\r\n    eventToEmit: string;\r\n\r\n    constructor(parentScene: ProceduralFreeRoam, x: number, y: number, event: string, key: string) {\r\n        super(\r\n            parentScene,\r\n            x,\r\n            y,\r\n            key\r\n        );\r\n        this.eventToEmit = event;\r\n        this.setVisible(false);\r\n        parentScene.add.existing(this);\r\n        this.parentScene = parentScene;\r\n        this.setDepth(10);\r\n        this.canInteract = false;\r\n        this.setScale(0.3)\r\n    }\r\n\r\n    checkIfPlayerIsNear(): boolean {\r\n        if (!this.parentScene.player) {\r\n            return false;\r\n        }\r\n        return (\r\n            Math.abs(this.parentScene.player.x - this.x) < 100 &&\r\n            Math.abs(this.parentScene.player.y - this.y) < 100\r\n        );\r\n    }\r\n\r\n    update(): void {\r\n        const isNear = this.checkIfPlayerIsNear();\r\n        if (isNear && !this.canInteract) {\r\n            this.setVisible(true);\r\n        }\r\n        if (!isNear && this.canInteract && this.visible) {\r\n            this.setVisible(false);\r\n        }\r\n\r\n        this.canInteract = isNear;\r\n\r\n        if (this.canInteract && this.parentScene.input.keyboard!.checkDown(this.parentScene.ekey!, 250)) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default Interactive;","import { Scene } from 'phaser';\r\nimport { Polygons } from '../utils/polygons'\r\nimport GroundBiome from '../biomes/GroundBiome';\r\nimport FlyingBiome from '../biomes/FlyingBiome';\r\nimport SteelBiome from '../biomes/SteelBiome';\r\nimport PsychicBiome from '../biomes/PsychicBiome';\r\nimport { getCharacterSpriteURL, getImageURL, getAssetURL, getJoystickAsset } from '../utils/helpers';\r\nimport OuterArea from '../biomes/OuterArea';\r\nimport Lootbox from \"../objects/Lootbox\";\r\nimport { config } from '../config/config';\r\nimport { BaseBiome } from '../biomes/BaseBiome';\r\nimport { dungeonChunkCoordinates } from '../utils/dungeons';\r\nimport Perlin from '../utils/perlin';\r\nimport { Layer, LootboxDetails } from '../types.d';\r\nimport Player from '../objects/Player'; \r\nimport Dungeon from '../objects/Dungeon';\r\nimport { centralRegion } from '../utils/maps';\r\nimport VirtualJoystick from 'phaser3-rex-plugins/plugins/virtualjoystick.js';\r\nimport Arena from '../objects/Arena';\r\nimport Interactive from '../objects/Interactives';\r\n\r\nexport class ProceduralFreeRoam extends Scene {\r\n  //overall map size\r\n  resolution: number = 3000;\r\n\r\n  collidableObjects: Phaser.Physics.Arcade.Group | undefined = undefined;\r\n\r\n  chunkSize: number = 16;\r\n  tileSize: number = 16;\r\n  characterURL = \"adventurer\";\r\n  loader: Phaser.Loader.LoaderPlugin | null = null;\r\n  checkActive: Boolean = false;\r\n  cheatCode: string | null = null;\r\n  cheatTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  polygonData: {\r\n    index: number,\r\n    polygonIndex: number,\r\n    vertices: { x: number, y: number }[],\r\n    reducedVertices: { x: number, y: number }[]\r\n    lootBoxesCoordinates: { x: number, y: number }[]\r\n    gradientAreaCoordinates: { x: number, y: number }[]\r\n    outerBorderCoordinates: { x: number, y: number }[]\r\n    centroid: { x: number, y: number }\r\n  }[] = [];\r\n  lootboxes: Lootbox[] = [];\r\n  lootboxDetails: LootboxDetails[] = [];\r\n\r\n  cursor!: Phaser.Types.Input.Keyboard.CursorKeys;\r\n  ekey: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n  enterKey: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n  dungeonVertices: { x: number; y: number; index: number }[] = [];\r\n  chunks: BaseBiome[] = [];\r\n  followPoint: Phaser.Math.Vector2 | undefined = undefined;\r\n\r\n  joystick: VirtualJoystick | undefined = undefined;\r\n  EbuttonMobile: Phaser.GameObjects.Container | undefined = undefined;\r\n  eButtonImage: Phaser.GameObjects.Image | undefined = undefined;\r\n  homeButtonImage: Phaser.GameObjects.Image | undefined = undefined;\r\n\r\n  player: Player | null = null;\r\n  spawnPoint: { x: number; y: number } | undefined = undefined;\r\n\r\n  keyW: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n  keyS: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n  keyA: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n  keyD: Phaser.Input.Keyboard.Key | undefined = undefined;\r\n  // indices of the polygons which are biomes\r\n  indices: integer[] = [];\r\n  debugGraphics: Phaser.GameObjects.Graphics | undefined = undefined;\r\n  perlin: Perlin\r\n  dungeons: { x: number, y: number }[] = [];\r\n  dungeonObjects: Dungeon[] = [];\r\n  arena: Arena | undefined = undefined;\r\n  interactives: Interactive[] = [];\r\n  seed: string;\r\n  polygons: Polygons\r\n\r\n  constructor(lootboxDetails: LootboxDetails[], seed: string) {\r\n    super({ key: \"SceneMain\", physics: { arcade: {} }, active: true });\r\n    this.perlin = new Perlin();\r\n    this.lootboxDetails = lootboxDetails;\r\n    this.seed = \"erg\";\r\n    this.polygons = new Polygons(this.seed);\r\n  }\r\n\r\n  preload() {\r\n    const { lootboxOpen, lootboxClosed, openLootbox, openDungeon } = config;\r\n    this.load.image(lootboxOpen.key, lootboxOpen.url);\r\n    this.load.image(lootboxClosed.key, lootboxClosed.url);\r\n    this.load.image(openLootbox.key, openLootbox.url);\r\n    this.load.image(openDungeon.key, openDungeon.url);\r\n    this.checkForCheat()\r\n    this.load.image(config.arena.startMatchImage.key, config.arena.startMatchImage.url);\r\n    this.load.image(config.arena.startMatchImageMobile.key, config.arena.startMatchImageMobile.url);\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      this.load.image(centralRegion.Interactives![i].image.key, centralRegion.Interactives![i].image.url);\r\n    }\r\n    this.load.spritesheet('adventurer', getCharacterSpriteURL('adventurer.webp'), {\r\n      frameWidth: 256,\r\n      frameHeight: 256,\r\n    });\r\n    this.indices = this.polygons.randomWalkGen();\r\n\r\n    this.load.plugin(\r\n      \"rexvirtualjoystickplugin\",\r\n      \"https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexvirtualjoystickplugin.min.js\",\r\n      true\r\n    );\r\n\r\n    //spritesheets for biomes\r\n    this.load.spritesheet(\r\n      'ground-biome',\r\n      getImageURL('ground-biome.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'flying-biome',\r\n      getImageURL('flying-biome.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'psychic-biome',\r\n      getImageURL('psychic-biome.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'steel-biome',\r\n      getImageURL('steel-biome.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'groundNonCollidable',\r\n      getAssetURL('ground-biome-assets-noCollide.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'flyingNonCollidable',\r\n      getAssetURL('flying-biome-assets-noCollide.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'steelNonCollidable',\r\n      getAssetURL('steel-biome-assets-noCollide.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'psychicNonCollidable',\r\n      getAssetURL('psychic-biome-assets-noCollide.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n\r\n    this.load.atlas('ground-atlas', getAssetURL('ground-biome-assets-collide-atlas.png'), getAssetURL('ground-biome-assets-collide-atlas.json'));\r\n    this.load.atlas('flying-atlas', getAssetURL('flying-biome-assets-collide-atlas.png'), getAssetURL('flying-biome-assets-collide-atlas.json'));\r\n    this.load.atlas('steel-atlas', getAssetURL('steel-biome-assets-collide-atlas.png'), getAssetURL('steel-biome-assets-collide-atlas.json'));\r\n    this.load.atlas('psychic-atlas', getAssetURL('psychic-biome-assets-collide-atlas.png'), getAssetURL('psychic-biome-assets-collide-atlas.json'));\r\n\r\n    this.load.spritesheet(\r\n      'ground-biome-dungeon',\r\n      getImageURL('ground-biome-dungeon.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'flying-biome-dungeon',\r\n      getImageURL('flying-biome-dungeon.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'steel-biome-dungeon',\r\n      getImageURL('steel-biome-dungeon.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n    this.load.spritesheet(\r\n      'psychic-biome-dungeon',\r\n      getImageURL('psychic-biome-dungeon.png'), {\r\n      frameWidth: 16,\r\n      frameHeight: 16\r\n    }\r\n    )\r\n\r\n    this.load.image(\r\n      'joystick-inner',\r\n      getJoystickAsset('joystick-inner.webp')\r\n    )\r\n    this.load.image(\r\n      'joystick-outer',\r\n      getJoystickAsset('joystick-outer.webp')\r\n    )\r\n    this.load.image(\r\n      'home-button',\r\n      getJoystickAsset('homeButton.webp')\r\n    )\r\n    this.load.image(\r\n      'e-button',\r\n      getJoystickAsset('eButton.webp')\r\n    )\r\n\r\n    this.load.image(\r\n      centralRegion.asset.tileset.key,\r\n      centralRegion.asset.tileset.url,\r\n    );\r\n    this.load.tilemapTiledJSON(\r\n      centralRegion.asset.map.key,\r\n      centralRegion.asset.map.url,\r\n    );\r\n\r\n    this.load.image(\r\n      centralRegion.asset.overlay!.key,\r\n      centralRegion.asset.overlay!.url,\r\n    );\r\n\r\n    this.load.image(\r\n      centralRegion.asset.glitchTiles!.key,\r\n      centralRegion.asset.glitchTiles!.url,\r\n    );\r\n\r\n    this.load.tilemapTiledJSON(\r\n      centralRegion.asset.glitchMap!.key,\r\n      centralRegion.asset.glitchMap!.url,\r\n    );\r\n  }\r\n\r\n  create() {\r\n    this.cursor = this.input.keyboard!.createCursorKeys();\r\n    this.ekey = this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.E);\r\n    this.enterKey = this.input.keyboard!.addKey(\r\n      Phaser.Input.Keyboard.KeyCodes.ENTER\r\n    );\r\n\r\n    this.setPolygonData();\r\n\r\n    // Start the player and cam at center of home base\r\n    this.spawnPoint = { x: this.polygonData[0].centroid.x, y: this.polygonData[0].centroid.y };\r\n\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n\r\n    this.player = new Player(\r\n      this,\r\n      this.spawnPoint.x,\r\n      this.spawnPoint.y,\r\n      this.characterURL,\r\n      this.cursor\r\n    );\r\n\r\n    this.player.changeCharacter(this.characterURL);\r\n\r\n    if (this.sys.game.device.os.desktop) {\r\n      this.cameras.main.setZoom(2.4);\r\n    } else {\r\n      this.cameras.main.setZoom(1.7);\r\n    } this.followPoint = new Phaser.Math.Vector2(\r\n      this.spawnPoint.x, this.spawnPoint.y\r\n    );\r\n\r\n    this.chunks = [];\r\n\r\n\r\n    // debugging\r\n    this.debugGraphics = this.add.graphics();\r\n    this.debugGraphics.lineStyle(2, 0xff0000, 1);\r\n\r\n\r\n    this.physics.world.debugGraphic = this.debugGraphics;\r\n    this.physics.world.drawDebug = false;\r\n    this.physics.world.debugGraphic.setAlpha(0);\r\n    this.physics.world.debugGraphic.setDepth(5);\r\n\r\n    this.collidableObjects = this.physics.add.group();\r\n    this.physics.add.collider(this.player, this.collidableObjects);\r\n\r\n    this.loader = new Phaser.Loader.LoaderPlugin(this);\r\n\r\n    this.addLootBoxes();\r\n\r\n    this.placeDungeonForEachPolygon();\r\n\r\n     \r\n\r\n    if (this.spawnPoint.x == this.polygonData[0].centroid.x && this.spawnPoint.y == this.polygonData[0].centroid.y) {\r\n      this.setupCentralMap(this.spawnPoint.x, this.spawnPoint.y);\r\n    }\r\n    if (!this.sys.game.device.os.desktop) {\r\n      this.setUpJoystick();\r\n      this.setupEButton();\r\n    }\r\n    this.setupHomeButton()\r\n    this.setupArena();\r\n    this.setupInteractives();\r\n    let { x, y, width, height }: { x: number, y: number, width: number, height: number } = this.polygons.getWorldBounds()!;\r\n    // this.physics.world.setBounds(x, y, width, height);\r\n    // this.physics.world.setBoundsCollision(true, true, true, true);\r\n  }\r\n\r\n  pauseGame: () => void = () => {\r\n    if (this.scene.manager) {\r\n      this.scene.pause();\r\n    } else if (\r\n      this.scene &&\r\n      this.scene.systems &&\r\n      this.scene.systems.game &&\r\n      this.scene.systems.game.scene\r\n    ) {\r\n      this.scene.manager = this.scene.systems.game.scene;\r\n      this.scene.pause();\r\n    }\r\n  };\r\n\r\n  resumeGame: () => void = () => {\r\n    if (this.scene.manager) {\r\n      this.scene.resume();\r\n    } else if (\r\n      this.scene &&\r\n      this.scene.systems &&\r\n      this.scene.systems.game &&\r\n      this.scene.systems.game.scene\r\n    ) {\r\n      this.scene.manager = this.scene.systems.game.scene;\r\n      this.scene.resume();\r\n    }\r\n  };\r\n\r\n  checkForCheat() {\r\n    this.input.keyboard!.on(\"keydown\", (event: any) => {\r\n      if (\r\n        event.key === \"d\" ||\r\n        event.key === \"e\" ||\r\n        event.key === \"l\" ||\r\n        event.key === \"t\" ||\r\n        event.key === \"a\" ||\r\n        event.key === \"f\" ||\r\n        event.key === \"o\" ||\r\n        event.key === \"r\" ||\r\n        event.key === \"c\" ||\r\n        event.key === \"e\"\r\n      ) {\r\n        const Cheat = \"deltaforce\";\r\n        if (!this.checkActive) {\r\n          if (this.cheatCode && !Cheat.startsWith(this.cheatCode)) {\r\n            this.cheatCode = null;\r\n          }\r\n          this.cheatCode = (this.cheatCode || \"\") + event.key;\r\n\r\n          if (this.cheatCode === \"deltaforce\") {\r\n            console.log(\"Cheat entered\");\r\n            this.checkActive = true;\r\n          }\r\n          if (this.cheatTimeout) {\r\n            clearTimeout(this.cheatTimeout);\r\n          }\r\n          // Clear the cheat code if there is no input for a certain duration\r\n          this.cheatTimeout = setTimeout(() => {\r\n            this.cheatCode = null;\r\n          }, 2000);\r\n        }\r\n      } else {\r\n        this.cheatCode = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  private setupEButton() {\r\n    this.eButtonImage = this.add.image(this.cameras.main.width * 0.66, this.cameras.main.height * 0.7, 'e-button').setScale(0.15);\r\n    this.eButtonImage.setInteractive({ useHandCursor: true });\r\n    this.eButtonImage.setDepth(20);\r\n    this.eButtonImage.setScrollFactor(0);\r\n\r\n\r\n    this.eButtonImage.on(\"pointerdown\", () => {\r\n      console.log(\"E Button Clicked!\");\r\n      if (this.ekey) {\r\n        this.ekey.isDown = true;\r\n        this.time.delayedCall(100, () => { this.ekey!.isDown = false; });\r\n      } else {\r\n        console.error(\"Error: this.ekey is undefined!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  private setupHomeButton() {\r\n    const imageX = this.sys.game.device.os.desktop ? this.cameras.main.width * 0.69 : this.cameras.main.width * 0.7;\r\n    const imageY = this.sys.game.device.os.desktop ? this.cameras.main.height * 0.69 : this.cameras.main.height * 0.7;\r\n    this.homeButtonImage = this.add.image(imageX, imageY, 'home-button').setScale(0.15);\r\n    this.homeButtonImage.setInteractive({ useHandCursor: true });\r\n    this.homeButtonImage.setDepth(20);\r\n    this.homeButtonImage.setScrollFactor(0);\r\n\r\n\r\n    console.log(\"Circle Position:\", this.homeButtonImage.x, this.homeButtonImage.y);\r\n\r\n    this.homeButtonImage.on(\"pointerdown\", () => {\r\n      this.player!.x = this.polygonData[0].centroid.x;\r\n      this.player!.y = this.polygonData[0].centroid.y;\r\n    });\r\n  }\r\n\r\n  private setUpJoystick(): void {\r\n    const windowHeight = this.cameras.main.height;\r\n    const windowWidth = this.cameras.main.width;\r\n    const x = 50; // 50px gap from left corner\r\n    const y = windowHeight / 1.5; // 50px gap from bottom\r\n    console.log(\"window height\" + this.cameras.main.height);\r\n    console.log(\"x: \" + x + \" y: \" + y);\r\n    this.joystick = new VirtualJoystick(this, {\r\n      x: 280,\r\n      y: y,\r\n      base: this.add.image(0, 0, 'joystick-outer').setAlpha(0.8).setDepth(20).setScale(0.2),\r\n      thumb: this.add.image(0, 0, 'joystick-inner').setDepth(20).setScale(0.2),\r\n      radius: 35,\r\n      dir: \"4dir\",\r\n    });\r\n  }\r\n\r\n  private setupCentralMap(startX: number, startY: number) {\r\n    const map = this.make.tilemap({ key: centralRegion.asset.map.key });\r\n\r\n    const tileset = map.addTilesetImage(\r\n      centralRegion.asset.tileset!.key,\r\n      centralRegion.asset.tileset!.key,\r\n      16,\r\n      16,\r\n      1,\r\n      2\r\n    );\r\n    const overlay = map.addTilesetImage(\r\n      centralRegion.asset.overlay!.key,\r\n      centralRegion.asset.overlay!.key,\r\n      16,\r\n      16,\r\n      1,\r\n      2\r\n    );\r\n    const glitchMap = this.make.tilemap({ key: centralRegion.asset.glitchMap!.key });\r\n    const glitchTiles = glitchMap.addTilesetImage(\r\n      centralRegion.asset.glitchTiles!.key,\r\n      centralRegion.asset.glitchTiles!.key,\r\n      16,\r\n      16\r\n    );\r\n    if (!tileset || !glitchMap || !overlay || !glitchTiles) {\r\n      return\r\n    }\r\n\r\n    const mapWidth = map.widthInPixels;\r\n    const mapHeight = map.heightInPixels;\r\n    const mapX = startX - mapWidth / 2;\r\n    const mapY = startY - mapHeight / 2 - this.tileSize * 3;\r\n\r\n    const glitchMapX = startX - glitchMap.widthInPixels / 2;\r\n    const glitchMapY = startY - glitchMap.heightInPixels / 2 - this.tileSize * 3;\r\n    map.createLayer(Layer.BELOW_PLAYER, tileset, mapX, mapY)!.setDepth(1);\r\n\r\n    glitchMap.createLayer(Layer.GLTICH_LAYER, glitchTiles, glitchMapX, glitchMapY)!.setDepth(2);\r\n\r\n    const objectsLayer = map.createLayer(Layer.OBJECTS, tileset, mapX, mapY)!.setDepth(5).setCollisionByProperty({ collides: true });\r\n\r\n    map.createLayer(Layer.ABOVE_PLAYER, [tileset, overlay], mapX, mapY)!.setDepth(6);\r\n    this.physics.add.collider(this.player!, objectsLayer);\r\n\r\n  }\r\n\r\n  private setPolygonData() {\r\n    const polygons = this.polygons.voronoi.cellPolygons();\r\n    this.polygons.calculatePolygonData();\r\n\r\n    this.polygonData = this.polygons.polygonData;\r\n    this.polygonData.forEach(vertex => {\r\n      vertex.vertices = vertex.vertices.map(v => ({ x: v.x * this.resolution, y: v.y * this.resolution }));\r\n      vertex.reducedVertices = vertex.reducedVertices.map(v => ({ x: v.x * this.resolution, y: v.y * this.resolution }));\r\n      vertex.lootBoxesCoordinates = vertex.lootBoxesCoordinates.map(v => ({ x: v.x * this.resolution, y: v.y * this.resolution }));\r\n      vertex.gradientAreaCoordinates = vertex.gradientAreaCoordinates.map(v => ({ x: v.x * this.resolution, y: v.y * this.resolution }));\r\n      vertex.outerBorderCoordinates = vertex.outerBorderCoordinates.map(v => ({ x: v.x * this.resolution, y: v.y * this.resolution }));\r\n      vertex.centroid = { x: vertex.centroid.x * this.resolution, y: vertex.centroid.y * this.resolution };\r\n    });\r\n    console.log(this.polygons.polygonData);\r\n  }\r\n\r\n  private setupInteractives() {\r\n    if (!centralRegion.Interactives) {\r\n      return\r\n    }\r\n\r\n    if (this.interactives) {\r\n      for (let i = 0; i < this.interactives.length; i++) {\r\n        this.interactives[i].destroy();\r\n      }\r\n    }\r\n    this.interactives = [];\r\n\r\n    for (const interactive of centralRegion.Interactives) {\r\n      if (interactive.name === \"ARENA\") {\r\n        continue;\r\n      }\r\n      if (!this.spawnPoint) {\r\n        return;\r\n      }\r\n      this.interactives.push(new Interactive(\r\n        this,\r\n        interactive.coordinates.x * this.tileSize + this.spawnPoint.x,\r\n        interactive.coordinates.y * this.tileSize + this.spawnPoint.y,\r\n        interactive.event,\r\n        interactive.image.key\r\n      ))\r\n      console.log(\"Interactive setup\", interactive.name, interactive.image.key);\r\n    }\r\n  }\r\n\r\n  private setupArena() {\r\n    if (!this.spawnPoint || !centralRegion.Interactives) {\r\n      return;\r\n    }\r\n    this.arena = new Arena(\r\n      this,\r\n      centralRegion.Interactives[2].coordinates.x * this.tileSize + this.spawnPoint.x,\r\n      centralRegion.Interactives[2].coordinates.y * this.tileSize + this.spawnPoint.y\r\n    );\r\n    console.log(\"Arena setup\", this.arena.x, this.arena.y);\r\n  }\r\n\r\n  disableKeys(): void {\r\n    if (this.input.keyboard) {\r\n      this.input.keyboard.enabled = false;\r\n    }\r\n  }\r\n\r\n  enableKeys(): void {\r\n    if (this.input.keyboard) {\r\n      this.input.keyboard.enabled = true;\r\n    }\r\n  }\r\n\r\n  addLootBoxes() {\r\n    const minDistance = 500; // Minimum allowed distance between loot boxes\r\n    let lootboxCount = 0;\r\n    for (let polygon of this.polygonData) {\r\n      const validLootBoxes: { x: number; y: number }[] = [];\r\n      for (let lootBox of polygon.lootBoxesCoordinates) {\r\n        // Check distance with existing valid loot boxes\r\n        let isFarEnough = true;\r\n\r\n        for (let existing of validLootBoxes) {\r\n          const distance = Phaser.Math.Distance.Between(lootBox.x, lootBox.y, existing.x, existing.y);\r\n          if (distance < minDistance) {\r\n            isFarEnough = false;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (isFarEnough && lootboxCount < 65 && polygon.index !== 0) {\r\n          console.log(\"lootbox\", lootboxCount);\r\n          const newLootbox = new Lootbox(this, lootBox.x, lootBox.y, false, lootboxCount);\r\n          newLootbox.loadState();\r\n          this.lootboxes.push(newLootbox);\r\n          validLootBoxes.push(lootBox)\r\n          lootboxCount++;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"lootboxes\", this.lootboxes.length);\r\n  }\r\n\r\n  handleOpenLootbox(lootboxID: number): void {\r\n\r\n    for (let i = 0; i < this.lootboxes.length; i++) {\r\n      if (this.lootboxes[i].ID === lootboxID) {\r\n        this.lootboxes[i].Open();\r\n        break;\r\n      }\r\n    }\r\n\r\n    const lootboxesDetails = this.lootboxDetails;\r\n\r\n    if (lootboxesDetails === undefined) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < lootboxesDetails.length; i++) {\r\n      if (lootboxesDetails[i].ID === lootboxID) {\r\n        lootboxesDetails[i].isOpen = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCharacterChange(characterURL: string): void {\r\n    this.characterURL = characterURL;\r\n    if (!this.loader) {\r\n      return;\r\n    }\r\n    this.loader.spritesheet(\r\n      this.characterURL,\r\n      getCharacterSpriteURL(this.characterURL),\r\n      {\r\n        frameWidth: config.player.frameWidth,\r\n        frameHeight: config.player.frameHeight,\r\n      }\r\n    );\r\n    this.loader.once(\"complete\", () => {\r\n      this.player?.changeCharacter(this.characterURL);\r\n    });\r\n    if (this.sys.events) {\r\n      this.loader.start();\r\n    }\r\n  }\r\n\r\n  getCenterVertices(): { x: number; y: number; polygonIndex: number }[] {\r\n    const centerVertices = this.polygonData.map((polygon, index) => ({\r\n      x: polygon.centroid.x,\r\n      y: polygon.centroid.y,\r\n      polygonIndex: polygon.polygonIndex\r\n    }));\r\n    return centerVertices;\r\n  }\r\n\r\n  getDungeonVertices(seed = 12345): { x: number; y: number; index: number }[] {\r\n    const centerVertices = this.getCenterVertices();\r\n    const distanceFromCenter = 500;\r\n    const randomOffset = (index: number) => {\r\n      const angle = (Math.sin(seed + index) * 2 * Math.PI) % (2 * Math.PI);\r\n      return { x: Math.cos(angle) * distanceFromCenter, y: Math.sin(angle) * distanceFromCenter };\r\n    };\r\n\r\n    return centerVertices.map((vertex, index) => {\r\n      const offset = randomOffset(index);\r\n      return { x: vertex.x + offset.x, y: vertex.y + offset.y, index: vertex.polygonIndex };\r\n    });\r\n\r\n  }\r\n\r\n  placeDungeonForEachPolygon() {\r\n    console.log(this.polygonData)\r\n    for (let polygon of this.polygonData) {\r\n      let isDisabled = false;\r\n      if (polygon.index === 0) {\r\n        isDisabled = true;\r\n      }\r\n      const center = polygon.centroid;\r\n      const { x, y } = dungeonChunkCoordinates(center, this.chunkSize, this.tileSize, this.seed);\r\n      this.dungeons[polygon.index] = { x, y };\r\n      const peakX = (x * (this.chunkSize * this.tileSize)) + (this.chunkSize * this.tileSize) / 2;\r\n      const peakY = (y * (this.chunkSize * this.tileSize)) + (this.chunkSize * this.tileSize) / 2;\r\n      console.log('Peak:', polygon.index, peakX, peakY);\r\n      this.dungeonObjects.push(new Dungeon(this, peakX, peakY, polygon.index, isDisabled));\r\n      this.perlin.addPeakPoint(peakX / 500, peakY / 500, 1, (20 * this.tileSize) / 500);\r\n\r\n      console.log('Dungeon:', this.dungeons[polygon.index]);\r\n    }\r\n  }\r\n\r\n  isWithinBounds(chunkX: number, chunkY: number): { withinBounds: boolean; biomeType?: string; index?: number } {\r\n    const chunkSizeInPixels = this.chunkSize * this.tileSize;\r\n    const chunkCorners = [\r\n      { x: chunkX * chunkSizeInPixels, y: chunkY * chunkSizeInPixels },\r\n      { x: (chunkX + 1) * chunkSizeInPixels, y: chunkY * chunkSizeInPixels },\r\n      { x: chunkX * chunkSizeInPixels, y: (chunkY + 1) * chunkSizeInPixels },\r\n      { x: (chunkX + 1) * chunkSizeInPixels, y: (chunkY + 1) * chunkSizeInPixels }\r\n    ];\r\n\r\n    for (let polygon of this.polygonData) {\r\n      for (let corner of chunkCorners) {\r\n        if (this.point_in_polygon(corner, polygon.outerBorderCoordinates)) {\r\n          var type;\r\n          if (polygon.index == 0) {\r\n            type = \"home\";\r\n          } else if (polygon.index >= 0 && polygon.index < 5) {\r\n            type = \"flying\";\r\n          }\r\n          else if (polygon.index >= 5 && polygon.index < 10) {\r\n            type = \"ground\";\r\n          }\r\n          else if (polygon.index >= 10 && polygon.index < 15) {\r\n            type = \"steel\";\r\n          }\r\n          else {\r\n            type = \"psychic\";\r\n          }\r\n          return { withinBounds: true, biomeType: type, index: polygon.index };\r\n        }\r\n\r\n      }\r\n    }\r\n    return { withinBounds: false };\r\n  }\r\n\r\n  point_in_polygon(point: { x: number; y: number }, polygon: { x: number; y: number }[]): boolean {\r\n\r\n    const num_vertices = polygon.length;\r\n    var x = point.x;\r\n    var y = point.y;\r\n    let inside = false;\r\n\r\n    let p1 = polygon[0];\r\n    let p2;\r\n\r\n    for (let i = 1; i <= num_vertices; i++) {\r\n      p2 = polygon[i % num_vertices];\r\n\r\n      if (y > Math.min(p1.y, p2.y)) {\r\n        if (y <= Math.max(p1.y, p2.y)) {\r\n          if (x <= Math.max(p1.x, p2.x)) {\r\n            const x_intersection = ((y - p1.y) * (p2.x - p1.x)) / (p2.y - p1.y) + p1.x;\r\n\r\n            if (p1.x === p2.x || x <= x_intersection) {\r\n              inside = !inside;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      p1 = p2;\r\n    }\r\n    return inside;\r\n  }\r\n\r\n  getChunk(x: number, y: number) {\r\n    var chunk = null;\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      if (this.chunks[i].x == x && this.chunks[i].y == y) {\r\n        chunk = this.chunks[i];\r\n      }\r\n    }\r\n    return chunk;\r\n  }\r\n\r\n  checkIfDungeon(x: number, y: number) {\r\n    for (let dungeon of this.dungeons) {\r\n      if (dungeon.x == x && dungeon.y == y) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  update() {\r\n    // if(this.joystick) {\r\n    // this.joystick.\r\n    if (this.debugGraphics) {\r\n      this.debugGraphics.clear();\r\n    }\r\n    this.physics.world.drawDebug = true;\r\n    this.lootboxes.forEach(lootbox => lootbox.update());\r\n    this.dungeonObjects.forEach(dungeon => dungeon.update());\r\n    this.arena?.update();\r\n    this.interactives.forEach(interactive => interactive.update());\r\n    if (this.player && this.spawnPoint) {\r\n      this.player.update();\r\n      this.events.emit('player-moved', Math.round(this.player.x - this.spawnPoint.x), Math.round(this.player.y - this.spawnPoint.y));\r\n\r\n    }\r\n    // console.log('Player at:', this.player.x, this.player.y);\r\n    const gridSize = this.chunkSize * this.tileSize;\r\n\r\n    if (!this.player) return;\r\n\r\n    const snappedChunkX = Math.round(this.player.x / gridSize);\r\n    const snappedChunkY = Math.round(this.player.y / gridSize);\r\n\r\n    for (var x = snappedChunkX - 2; x < snappedChunkX + 2; x++) {\r\n      for (var y = snappedChunkY - 2; y < snappedChunkY + 2; y++) {\r\n        const result = this.isWithinBounds(x, y);\r\n\r\n        const isDungeon = this.checkIfDungeon(x, y);\r\n        // console.log('Is Dungeon:', x, y, isDungeon);\r\n\r\n        if (result.withinBounds) {\r\n          var existingChunk = this.getChunk(x, y);\r\n          if (existingChunk == null) {\r\n            let newChunk: BaseBiome;\r\n            switch (result.biomeType) {\r\n              case 'home':\r\n                if (typeof result.index === 'number') {\r\n                  newChunk = new OuterArea(this, x, y, this.chunkSize, this.tileSize, result.index, this.perlin);\r\n                } else {\r\n                  throw new Error('Expected result.index to be a number');\r\n                }\r\n                break;\r\n              case 'steel':\r\n                if (typeof result.index === 'number') {\r\n                  if (x == 45 && y == 58) {\r\n                    console.log(\"isDungeon: \", isDungeon);\r\n                  }\r\n                  newChunk = new SteelBiome(this, x, y, this.chunkSize, this.tileSize, result.index, isDungeon, this.perlin);\r\n                } else {\r\n                  throw new Error('Expected result.index to be a number');\r\n                }\r\n                break;\r\n              case 'ground':\r\n                if (typeof result.index === 'number') {\r\n                  newChunk = new GroundBiome(this, x, y, this.chunkSize, this.tileSize, result.index, isDungeon, this.perlin);\r\n                } else {\r\n                  throw new Error('Expected result.index to be a number');\r\n                }\r\n                break;\r\n              case 'flying':\r\n                if (typeof result.index === 'number') {\r\n                  newChunk = new FlyingBiome(this, x, y, this.chunkSize, this.tileSize, result.index, isDungeon, this.perlin);\r\n                } else {\r\n                  throw new Error('Expected result.index to be a number');\r\n                }\r\n                //console.log('sand');\r\n                break;\r\n              case 'psychic':\r\n                if (typeof result.index === 'number') {\r\n                  newChunk = new PsychicBiome(this, x, y, this.chunkSize, this.tileSize, result.index, isDungeon, this.perlin);\r\n                } else {\r\n                  throw new Error('Expected result.index to be a number');\r\n                }\r\n                //console.log('grassBorder');\r\n                break;\r\n              default:\r\n                throw new Error(`Unknown biome type: ${result.biomeType}`);\r\n            }\r\n            this.chunks.push(newChunk);\r\n          }\r\n        } else {\r\n          var existingChunk = this.getChunk(x, y);\r\n          if (existingChunk === null) {\r\n            const newChunk = new OuterArea(this, x, y, this.chunkSize, this.tileSize, -1, this.perlin);\r\n            this.chunks.push(newChunk);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      var chunk = this.chunks[i];\r\n      const distance = Phaser.Math.Distance.Between(\r\n        snappedChunkX,\r\n        snappedChunkY,\r\n        chunk.x,\r\n        chunk.y\r\n      )\r\n      if (distance < 3) {\r\n        if (chunk !== null) {\r\n          chunk.load();\r\n        }\r\n      }\r\n      // to load left chunks for smooth map\r\n      else if (snappedChunkX - chunk.x > 0 && snappedChunkX - chunk.x < 4) {\r\n        if (chunk !== null) {\r\n          chunk.load();\r\n        }\r\n      }\r\n      else {\r\n        if (chunk !== null) {\r\n          chunk.unload();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { Scene } from \"phaser\";\r\nimport { ProceduralFreeRoam } from \"./Procedural-FreeRoam\";\r\n\r\nexport class coordinatesOverlay extends Scene {\r\n  xText: Phaser.GameObjects.Text | undefined = undefined;\r\n  yText: Phaser.GameObjects.Text | undefined = undefined;\r\n  gameScene: ProceduralFreeRoam | undefined = undefined;\r\n  constructor() {\r\n    super({ key: 'coordinatesOverlay', active: true });\r\n  }\r\n\r\n  create() {\r\n    this.xText = this.add.text(10, 0, \"X: 0\", { font: \"20px Courier\" }).setScrollFactor(0).setDepth(20);\r\n    this.yText = this.add.text(10, 0, \"Y: 0\", { font: \"20px Courier\" }).setScrollFactor(0).setDepth(20);\r\n    if (!this.gameScene) {\r\n      this.gameScene = this.scene.get('SceneMain') as ProceduralFreeRoam;\r\n    }\r\n\r\n    this.updateTextPosition();\r\n\r\n    // Listen for screen resize\r\n    this.scale.on(\"resize\", () => {\r\n      this.updateTextPosition();\r\n    });\r\n    this.gameScene.events.on('player-moved', this.handlePlayerMove, this);\r\n  }\r\n\r\n  updateTextPosition() {\r\n    const { height } = this.cameras.main;\r\n    const padding = { x: 10, y: 30 };\r\n    if (this.xText && this.yText) {\r\n\r\n      this.xText.setPosition(padding.x, height - padding.y - 20);\r\n      this.yText.setPosition(padding.x, height - padding.y);\r\n    }\r\n  }\r\n\r\n  handlePlayerMove(x: number, y: number) {\r\n    if (this.xText && this.yText) {\r\n      this.xText.setText(`X: ${x}`);\r\n      this.yText.setText(`Y: ${y}`);\r\n    }\r\n  }\r\n\r\n  update() {\r\n\r\n  }\r\n}","import { css, html, LitElement, TemplateResult } from \"lit\";\r\nimport { customElement, property } from \"lit/decorators.js\";\r\nimport Phaser from \"phaser\";\r\nimport { Buffer } from \"buffer\";\r\nimport { config } from \"./config/config\";\r\nimport { createComponent } from \"@lit-labs/react\";\r\nimport React from \"react\"; \r\nimport { ProceduralFreeRoam } from \"./scenes/Procedural-FreeRoam\";\r\nimport { LootboxDetails } from \"./types\";\r\nimport { coordinatesOverlay } from \"./scenes/coordinatesOverlay\";\r\n\r\nconst decrypt = (text: string, key: string) => {\r\n\treturn Number(\r\n\t\tBuffer.from(text, \"base64\")\r\n\t\t\t.toString(\"utf-8\")\r\n\t\t\t.replace(key + key, \"\")\r\n\t);\r\n};\r\n\r\n@customElement(\"free-roam\")\r\nclass FreeRoam extends LitElement {\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: block;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t`;\r\n\r\n\tprivate freeRoamGame!: Phaser.Game;\r\n\r\n\t@property({ type: Array }) lootboxDetails: {\r\n\t\tID: number;\r\n\t\tisOpen: boolean;\r\n\t}[] = [];\r\n\t@property({ type: String }) characterURL = \"\";\r\n\t@property({ type: String }) clanFlagUrl = \"\";\r\n\t@property({ type: String }) seedString = \"\"\r\n\r\n\tfirstUpdated(): void {\r\n\t\tthis.lootboxDetails.forEach((lootboxDetail) => {\r\n\t\t});\r\n\r\n\t\tthis.freeRoamGame = new Phaser.Game({\r\n\t\t\ttype: Phaser.AUTO,\r\n\t\t\tpixelArt: true,\r\n\t\t\tparent:\r\n\t\t\t\tthis.shadowRoot?.querySelector<HTMLElement>(\"#free-roam\") ??\r\n\t\t\t\tundefined,\r\n\t\t\tscene: [\r\n\t\t\t\tnew ProceduralFreeRoam(\r\n\t\t\t\t\tthis.lootboxDetails as LootboxDetails[],\r\n\t\t\t\t\tthis.seedString\r\n\t\t\t\t),\r\n\t\t\t\tnew coordinatesOverlay(),\r\n\t\t\t],\r\n\t\t\tdom: {\r\n\t\t\t\tcreateContainer: false,\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tmode: Phaser.Scale.RESIZE,\r\n\t\t\t\tautoCenter: Phaser.Scale.CENTER_BOTH,\r\n\t\t\t},\r\n\t\t\tfps: config.fps,\r\n\t\t\tbackgroundColor: \"#292634\",\r\n\t\t\tphysics: {\r\n\t\t\t\tdefault: \"arcade\",\r\n\t\t\t\tarcade: {\r\n\t\t\t\t\tgravity: { x: 0, y: 0 },\r\n\t\t\t\t\tdebug: false,\r\n\t\t\t\t\tfps: config.fps.target,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tbanner: false,\r\n\t\t});\r\n\t}\r\n\r\n\tdisconnectedCallback(): void {\r\n\t\tthis.freeRoamGame.destroy(true, false);\r\n\t}\r\n\r\n\trender(): TemplateResult {\r\n\t\tconst realWidth = window.screen.width * window.devicePixelRatio;\r\n\t\tconst realHeight = window.screen.height * window.devicePixelRatio;\r\n\t\twindow.innerHeight = realHeight;\r\n\t\twindow.innerWidth = realWidth;\r\n\t\treturn html`<div id=\"free-roam\"></div>`;\r\n\t}\r\n}\r\n\r\nconst FreeRoamLayer = createComponent({\r\n\ttagName: \"free-roam\",\r\n\telementClass: FreeRoam,\r\n\treact: React,\r\n});\r\n\r\nexport { FreeRoamLayer, FreeRoam };\r\n"],"names":["e","n","t","s","i","config","o","l","d","c","a","r","f","v","epsilon","splitter","resulterrbound","sum","elen","flen","h","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","estimate","vec","ccwerrboundA","ccwerrboundB","ccwerrboundC","B","C1","C2","D","u","orient2dadapt","ax","ay","bx","by","cx","cy","detsum","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","det","errbound","C1len","C2len","Dlen","orient2d","detleft","detright","EPSILON","EDGE_STACK","Delaunator","points","getX","defaultGetX","getY","defaultGetY","coords","p","maxTriangles","hullPrev","hullNext","hullTri","hullHash","minX","minY","maxX","maxY","x","y","i0","i1","i2","minDist","dist","i0x","i0y","i1x","i1y","minRadius","circumradius","i2x","i2y","quicksort","hull","j","d0","id","center","circumcenter","hullSize","k","xp","yp","start","key","q","pseudoAngle","triangles","halfedges","ar","b","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","br","dx","dy","px","py","ex","ey","fx","fy","ap","bp","cp","cl","ids","dists","left","right","temp","tempDist","median","swap","arr","tmp","Path","x0","y0","w","Polygon","Voronoi","delaunay","xmin","ymin","xmax","ymax","vectors","circumcenters","t2","t3","x1","y1","x2","y2","x3","y3","ab","context","buffer","inedges","ti","tj","xi","yi","xj","yj","h0","h1","cell","polygon","S","c0","c1","ci","cj","loop","ai","li","aj","lj","e0","V","P","e1","sx0","sy0","sx1","sy1","flip","vx0","vy0","vxn","vyn","vx","vy","tau","pow","pointX","pointY","collinear","jitter","Delaunay","that","flatArray","flatIterable","_","bounds","hullIndex","_hullIndex","dc","dt","array","Prando","seed","min","pseudoMax","max","length","chars","str","iterations","value","val","minFrom","maxFrom","minTo","maxTo","hash","Polygons","__publicField","loc","randomWalkRng","walker","visited","directions","within6x6Bounds","indexTracker","currentInd","availableDirs","dir","next","polygonArray","indices","index","vertices","centroid","topmost","bottommost","leftmost","rightmost","firstMatch","vertex","reducedVertices","gradientAreaCoordinates","outerBorderCoordinates","lootboxCoordinates","scale","BaseBiome","scene","chunkSize","tileSize","polygonIdx","isDungeon","perlin","highElevationTiles","lowElevationTiles","newLowElevationTiles","newHighElevationTiles","tileArray","assetType","tileX","tileY","perlinValues","spriteKey","whatAsset","perlinValue","dualTileX","dualTileY","tile","dungeonSize","dungeonOffset","dualMapTileX","dualMapTileY","width","height","threshold","halfWidth","bottomLeft","bottomRight","topLeft","topRight","point","num_vertices","isInside","p2","x_intersection","options","collidableList","topLeftX","topLeftY","area","areaTopLeftX","areaTopLeftY","overlaps","fullyContained","chunkLeft","chunkTop","chunkRight","chunkBottom","sprite","frameDetails","body","frame","depth","spriteIndices","Tile","Phaser","GroundBiome","assetNoise","normalizedNoise","color","biomeConfig","groundRules","asset","minRange","maxRange","flyingRules","SteelBiome","steelRules","PsychicBiome","psychicRules","placementParams","params","RegionName","Layer","getImageURL","image","getCharacterSpriteURL","character","getAssetURL","getJoystickAsset","FlyingBiome","noise","Lootbox","GameObjects","parentScene","isOpened","ID","lootboxState","isNear","dungeonChunkCoordinates","rng","xDisplacement","yDisplacement","Grad","z","Perlin","peakPoints","xin","yin","n0","n1","n2","j1","gi0","gi1","gi2","zin","n3","z0","k1","j2","k2","z1","z2","z3","gi3","peakPoint","distance","falloff","X","Y","n00","n01","n10","n11","peakInfluence","peak","intensity","falloffRadius","ghostPlayer","parentPlayer","playerX","playerY","followAreaLeft","followAreaRight","followAreaTop","followAreaBottom","factor","animations","Player","Physics","texture","cursor","characterURL","animation","_a","_b","_c","_d","_e","_f","_g","_h","forceX","forceY","Dungeon","dungeonIndex","disabled","centralRegion","Key","KeyCodes","KeyNames","CursorKeys","cnt","keyName","fromScene","isDown","FakeEvent","keyCode","keyNames","RAD_TO_DEG","RadToDeg","radians","DIRMODE","AngleToDirections","angle","dirMode","out","globOut","GetValue","GetDist","GetAngle","VectorToCursorKeys","startX","startY","endX","endY","m","dirStates","octant","EventEmitterMethods","eventEmitter","EventEmitterClass","event","GetPointerWorldXY","pointer","targetCamera","camera","globalOut","CircleClass","CircleContains","TouchCursor","gameObject","parent","worldXY","VirtualJoyStick","visible","radius","scrollFactor","touchCursor","rad","Arena","imageKey","checkKey","Interactive","ProceduralFreeRoam","Scene","lootboxDetails","lootboxOpen","lootboxClosed","openLootbox","openDungeon","Cheat","imageX","imageY","windowHeight","VirtualJoystick","map","tileset","overlay","glitchMap","glitchTiles","mapWidth","mapHeight","mapX","mapY","glitchMapX","glitchMapY","objectsLayer","interactive","lootboxCount","validLootBoxes","lootBox","isFarEnough","existing","newLootbox","lootboxID","lootboxesDetails","centerVertices","distanceFromCenter","randomOffset","offset","isDisabled","peakX","peakY","chunkX","chunkY","chunkSizeInPixels","chunkCorners","corner","type","inside","chunk","dungeon","lootbox","gridSize","snappedChunkX","snappedChunkY","result","existingChunk","newChunk","OuterArea","coordinatesOverlay","padding","FreeRoam","LitElement","lootboxDetail","realWidth","realHeight","html","css","__decorateClass","property","customElement","FreeRoamLayer","createComponent","React"],"mappings":"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;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAG;AAAA,MACjH;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAC7G;AAAA,MAAK;AAAA,MAAI;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAG;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAC/G;AAAA,MAAI;AAAA,MAAK;AAAA,MAAI;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC7G;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC7G;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAI;AAAA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","x_google_ignoreList":[0,1,2,4,5,6,7,8,9,10,11,12,29,30,31,32,33,34,35,36,37]}